{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":13,"index":323},"end":{"line":12,"column":29,"index":339}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"]}},{"name":"./MMKV","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":12,"index":353},"end":{"line":13,"column":29,"index":370}}],"key":"bx+/3lqg8YLaMsA/9DdSq06D6Ec=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useMMKV = useMMKV;\n  exports.useMMKVBuffer = exports.useMMKVBoolean = void 0;\n  exports.useMMKVListener = useMMKVListener;\n  exports.useMMKVNumber = void 0;\n  exports.useMMKVObject = useMMKVObject;\n  exports.useMMKVString = void 0;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _MMKV = require(_dependencyMap[1], \"./MMKV\");\n  function isConfigurationEqual(left, right) {\n    if (left == null || right == null) return left == null && right == null;\n    return left.encryptionKey === right.encryptionKey && left.id === right.id && left.path === right.path && left.mode === right.mode;\n  }\n  let defaultInstance = null;\n  function getDefaultInstance() {\n    if (defaultInstance == null) {\n      defaultInstance = new _MMKV.MMKV();\n    }\n    return defaultInstance;\n  }\n\n  /**\n   * Use the default, shared MMKV instance.\n   */\n\n  /**\n   * Use a custom MMKV instance with the given configuration.\n   * @param configuration The configuration to initialize the MMKV instance with. Does not have to be memoized.\n   */\n\n  function useMMKV(configuration) {\n    const instance = (0, _react.useRef)();\n    const lastConfiguration = (0, _react.useRef)();\n    if (configuration == null) return getDefaultInstance();\n    if (instance.current == null || !isConfigurationEqual(lastConfiguration.current, configuration)) {\n      lastConfiguration.current = configuration;\n      instance.current = new _MMKV.MMKV(configuration);\n    }\n    return instance.current;\n  }\n  function createMMKVHook(getter) {\n    return (key, instance) => {\n      const mmkv = instance ?? getDefaultInstance();\n      const [bump, setBump] = (0, _react.useState)(0);\n      const value = (0, _react.useMemo)(() => {\n        // bump is here as an additional outside dependency, so this useMemo\n        // re-computes the value each time bump changes, effectively acting as a hint\n        // that the outside value (storage) has changed. setting bump refreshes this value.\n        bump;\n        return getter(mmkv, key);\n      }, [mmkv, key, bump]);\n\n      // update value by user set\n      const set = (0, _react.useCallback)(v => {\n        const newValue = typeof v === 'function' ? v(getter(mmkv, key)) : v;\n        switch (typeof newValue) {\n          case 'number':\n          case 'string':\n          case 'boolean':\n            mmkv.set(key, newValue);\n            break;\n          case 'undefined':\n            mmkv.delete(key);\n            break;\n          case 'object':\n            if (newValue instanceof ArrayBuffer) {\n              mmkv.set(key, newValue);\n              break;\n            } else {\n              throw new Error(`MMKV: Type object (${newValue}) is not supported!`);\n            }\n          default:\n            throw new Error(`MMKV: Type ${typeof newValue} is not supported!`);\n        }\n      }, [key, mmkv]);\n\n      // update value if it changes somewhere else (second hook, same key)\n      (0, _react.useEffect)(() => {\n        const listener = mmkv.addOnValueChangedListener(changedKey => {\n          if (changedKey === key) {\n            setBump(b => b + 1);\n          }\n        });\n        return () => listener.remove();\n      }, [key, mmkv]);\n      return [value, set];\n    };\n  }\n\n  /**\n   * Use the string value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [username, setUsername] = useMMKVString(\"user.name\")\n   * ```\n   */\n  const useMMKVString = exports.useMMKVString = createMMKVHook((instance, key) => instance.getString(key));\n\n  /**\n   * Use the number value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [age, setAge] = useMMKVNumber(\"user.age\")\n   * ```\n   */\n  const useMMKVNumber = exports.useMMKVNumber = createMMKVHook((instance, key) => instance.getNumber(key));\n  /**\n   * Use the boolean value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [isPremiumAccount, setIsPremiumAccount] = useMMKVBoolean(\"user.isPremium\")\n   * ```\n   */\n  const useMMKVBoolean = exports.useMMKVBoolean = createMMKVHook((instance, key) => instance.getBoolean(key));\n  /**\n   * Use the buffer value (unsigned 8-bit (0-255)) of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [privateKey, setPrivateKey] = useMMKVBuffer(\"user.privateKey\")\n   * ```\n   */\n  const useMMKVBuffer = exports.useMMKVBuffer = createMMKVHook((instance, key) => instance.getBuffer(key));\n  /**\n   * Use an object value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * The object will be serialized using `JSON`.\n   *\n   * @example\n   * ```ts\n   * const [user, setUser] = useMMKVObject<User>(\"user\")\n   * ```\n   */\n  function useMMKVObject(key, instance) {\n    const [json, setJson] = useMMKVString(key, instance);\n    const value = (0, _react.useMemo)(() => {\n      if (json == null) return undefined;\n      return JSON.parse(json);\n    }, [json]);\n    const setValue = (0, _react.useCallback)(v => {\n      if (v instanceof Function) {\n        setJson(currentJson => {\n          const currentValue = currentJson != null ? JSON.parse(currentJson) : undefined;\n          const newValue = v(currentValue);\n          // Store the Object as a serialized Value or clear the value\n          return newValue != null ? JSON.stringify(newValue) : undefined;\n        });\n      } else {\n        // Store the Object as a serialized Value or clear the value\n        const newValue = v != null ? JSON.stringify(v) : undefined;\n        setJson(newValue);\n      }\n    }, [setJson]);\n    return [value, setValue];\n  }\n\n  /**\n   * Listen for changes in the given MMKV storage instance.\n   * If no instance is passed, the default instance will be used.\n   * @param valueChangedListener The function to call whenever a value inside the storage instance changes\n   * @param instance The instance to listen to changes to (or the default instance)\n   *\n   * @example\n   * ```ts\n   * useMMKVListener((key) => {\n   *   console.log(`Value for \"${key}\" changed!`)\n   * })\n   * ```\n   */\n  function useMMKVListener(valueChangedListener, instance) {\n    const ref = (0, _react.useRef)(valueChangedListener);\n    ref.current = valueChangedListener;\n    const mmkv = instance ?? getDefaultInstance();\n    (0, _react.useEffect)(() => {\n      const listener = mmkv.addOnValueChangedListener(changedKey => {\n        ref.current(changedKey);\n      });\n      return () => listener.remove();\n    }, [mmkv]);\n  }\n});","lineCount":199,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"useMMKV"],[7,17,6,15],[7,20,6,18,"useMMKV"],[7,27,6,25],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"useMMKVBuffer"],[8,23,7,21],[8,26,7,24,"exports"],[8,33,7,31],[8,34,7,32,"useMMKVBoolean"],[8,48,7,46],[8,51,7,49],[8,56,7,54],[8,57,7,55],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"useMMKVListener"],[9,25,8,23],[9,28,8,26,"useMMKVListener"],[9,43,8,41],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"useMMKVNumber"],[10,23,9,21],[10,26,9,24],[10,31,9,29],[10,32,9,30],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"useMMKVObject"],[11,23,10,21],[11,26,10,24,"useMMKVObject"],[11,39,10,37],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"useMMKVString"],[12,23,11,21],[12,26,11,24],[12,31,11,29],[12,32,11,30],[13,2,12,0],[13,6,12,4,"_react"],[13,12,12,10],[13,15,12,13,"require"],[13,22,12,20],[13,23,12,20,"_dependencyMap"],[13,37,12,20],[13,49,12,28],[13,50,12,29],[14,2,13,0],[14,6,13,4,"_MMKV"],[14,11,13,9],[14,14,13,12,"require"],[14,21,13,19],[14,22,13,19,"_dependencyMap"],[14,36,13,19],[14,49,13,28],[14,50,13,29],[15,2,14,0],[15,11,14,9,"isConfigurationEqual"],[15,31,14,29,"isConfigurationEqual"],[15,32,14,30,"left"],[15,36,14,34],[15,38,14,36,"right"],[15,43,14,41],[15,45,14,43],[16,4,15,2],[16,8,15,6,"left"],[16,12,15,10],[16,16,15,14],[16,20,15,18],[16,24,15,22,"right"],[16,29,15,27],[16,33,15,31],[16,37,15,35],[16,39,15,37],[16,46,15,44,"left"],[16,50,15,48],[16,54,15,52],[16,58,15,56],[16,62,15,60,"right"],[16,67,15,65],[16,71,15,69],[16,75,15,73],[17,4,16,2],[17,11,16,9,"left"],[17,15,16,13],[17,16,16,14,"encryptionKey"],[17,29,16,27],[17,34,16,32,"right"],[17,39,16,37],[17,40,16,38,"encryptionKey"],[17,53,16,51],[17,57,16,55,"left"],[17,61,16,59],[17,62,16,60,"id"],[17,64,16,62],[17,69,16,67,"right"],[17,74,16,72],[17,75,16,73,"id"],[17,77,16,75],[17,81,16,79,"left"],[17,85,16,83],[17,86,16,84,"path"],[17,90,16,88],[17,95,16,93,"right"],[17,100,16,98],[17,101,16,99,"path"],[17,105,16,103],[17,109,16,107,"left"],[17,113,16,111],[17,114,16,112,"mode"],[17,118,16,116],[17,123,16,121,"right"],[17,128,16,126],[17,129,16,127,"mode"],[17,133,16,131],[18,2,17,0],[19,2,18,0],[19,6,18,4,"defaultInstance"],[19,21,18,19],[19,24,18,22],[19,28,18,26],[20,2,19,0],[20,11,19,9,"getDefaultInstance"],[20,29,19,27,"getDefaultInstance"],[20,30,19,27],[20,32,19,30],[21,4,20,2],[21,8,20,6,"defaultInstance"],[21,23,20,21],[21,27,20,25],[21,31,20,29],[21,33,20,31],[22,6,21,4,"defaultInstance"],[22,21,21,19],[22,24,21,22],[22,28,21,26,"_MMKV"],[22,33,21,31],[22,34,21,32,"MMKV"],[22,38,21,36],[22,39,21,37],[22,40,21,38],[23,4,22,2],[24,4,23,2],[24,11,23,9,"defaultInstance"],[24,26,23,24],[25,2,24,0],[27,2,26,0],[28,0,27,0],[29,0,28,0],[31,2,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[36,2,35,0],[36,11,35,9,"useMMKV"],[36,18,35,16,"useMMKV"],[36,19,35,17,"configuration"],[36,32,35,30],[36,34,35,32],[37,4,36,2],[37,10,36,8,"instance"],[37,18,36,16],[37,21,36,19],[37,22,36,20],[37,23,36,21],[37,25,36,23,"_react"],[37,31,36,29],[37,32,36,30,"useRef"],[37,38,36,36],[37,40,36,38],[37,41,36,39],[38,4,37,2],[38,10,37,8,"lastConfiguration"],[38,27,37,25],[38,30,37,28],[38,31,37,29],[38,32,37,30],[38,34,37,32,"_react"],[38,40,37,38],[38,41,37,39,"useRef"],[38,47,37,45],[38,49,37,47],[38,50,37,48],[39,4,38,2],[39,8,38,6,"configuration"],[39,21,38,19],[39,25,38,23],[39,29,38,27],[39,31,38,29],[39,38,38,36,"getDefaultInstance"],[39,56,38,54],[39,57,38,55],[39,58,38,56],[40,4,39,2],[40,8,39,6,"instance"],[40,16,39,14],[40,17,39,15,"current"],[40,24,39,22],[40,28,39,26],[40,32,39,30],[40,36,39,34],[40,37,39,35,"isConfigurationEqual"],[40,57,39,55],[40,58,39,56,"lastConfiguration"],[40,75,39,73],[40,76,39,74,"current"],[40,83,39,81],[40,85,39,83,"configuration"],[40,98,39,96],[40,99,39,97],[40,101,39,99],[41,6,40,4,"lastConfiguration"],[41,23,40,21],[41,24,40,22,"current"],[41,31,40,29],[41,34,40,32,"configuration"],[41,47,40,45],[42,6,41,4,"instance"],[42,14,41,12],[42,15,41,13,"current"],[42,22,41,20],[42,25,41,23],[42,29,41,27,"_MMKV"],[42,34,41,32],[42,35,41,33,"MMKV"],[42,39,41,37],[42,40,41,38,"configuration"],[42,53,41,51],[42,54,41,52],[43,4,42,2],[44,4,43,2],[44,11,43,9,"instance"],[44,19,43,17],[44,20,43,18,"current"],[44,27,43,25],[45,2,44,0],[46,2,45,0],[46,11,45,9,"createMMKVHook"],[46,25,45,23,"createMMKVHook"],[46,26,45,24,"getter"],[46,32,45,30],[46,34,45,32],[47,4,46,2],[47,11,46,9],[47,12,46,10,"key"],[47,15,46,13],[47,17,46,15,"instance"],[47,25,46,23],[47,30,46,28],[48,6,47,4],[48,12,47,10,"mmkv"],[48,16,47,14],[48,19,47,17,"instance"],[48,27,47,25],[48,31,47,29,"getDefaultInstance"],[48,49,47,47],[48,50,47,48],[48,51,47,49],[49,6,48,4],[49,12,48,10],[49,13,48,11,"bump"],[49,17,48,15],[49,19,48,17,"setBump"],[49,26,48,24],[49,27,48,25],[49,30,48,28],[49,31,48,29],[49,32,48,30],[49,34,48,32,"_react"],[49,40,48,38],[49,41,48,39,"useState"],[49,49,48,47],[49,51,48,49],[49,52,48,50],[49,53,48,51],[50,6,49,4],[50,12,49,10,"value"],[50,17,49,15],[50,20,49,18],[50,21,49,19],[50,22,49,20],[50,24,49,22,"_react"],[50,30,49,28],[50,31,49,29,"useMemo"],[50,38,49,36],[50,40,49,38],[50,46,49,44],[51,8,50,6],[52,8,51,6],[53,8,52,6],[54,8,53,6,"bump"],[54,12,53,10],[55,8,54,6],[55,15,54,13,"getter"],[55,21,54,19],[55,22,54,20,"mmkv"],[55,26,54,24],[55,28,54,26,"key"],[55,31,54,29],[55,32,54,30],[56,6,55,4],[56,7,55,5],[56,9,55,7],[56,10,55,8,"mmkv"],[56,14,55,12],[56,16,55,14,"key"],[56,19,55,17],[56,21,55,19,"bump"],[56,25,55,23],[56,26,55,24],[56,27,55,25],[58,6,57,4],[59,6,58,4],[59,12,58,10,"set"],[59,15,58,13],[59,18,58,16],[59,19,58,17],[59,20,58,18],[59,22,58,20,"_react"],[59,28,58,26],[59,29,58,27,"useCallback"],[59,40,58,38],[59,42,58,40,"v"],[59,43,58,41],[59,47,58,45],[60,8,59,6],[60,14,59,12,"newValue"],[60,22,59,20],[60,25,59,23],[60,32,59,30,"v"],[60,33,59,31],[60,38,59,36],[60,48,59,46],[60,51,59,49,"v"],[60,52,59,50],[60,53,59,51,"getter"],[60,59,59,57],[60,60,59,58,"mmkv"],[60,64,59,62],[60,66,59,64,"key"],[60,69,59,67],[60,70,59,68],[60,71,59,69],[60,74,59,72,"v"],[60,75,59,73],[61,8,60,6],[61,16,60,14],[61,23,60,21,"newValue"],[61,31,60,29],[62,10,61,8],[62,15,61,13],[62,23,61,21],[63,10,62,8],[63,15,62,13],[63,23,62,21],[64,10,63,8],[64,15,63,13],[64,24,63,22],[65,12,64,10,"mmkv"],[65,16,64,14],[65,17,64,15,"set"],[65,20,64,18],[65,21,64,19,"key"],[65,24,64,22],[65,26,64,24,"newValue"],[65,34,64,32],[65,35,64,33],[66,12,65,10],[67,10,66,8],[67,15,66,13],[67,26,66,24],[68,12,67,10,"mmkv"],[68,16,67,14],[68,17,67,15,"delete"],[68,23,67,21],[68,24,67,22,"key"],[68,27,67,25],[68,28,67,26],[69,12,68,10],[70,10,69,8],[70,15,69,13],[70,23,69,21],[71,12,70,10],[71,16,70,14,"newValue"],[71,24,70,22],[71,36,70,34,"ArrayBuffer"],[71,47,70,45],[71,49,70,47],[72,14,71,12,"mmkv"],[72,18,71,16],[72,19,71,17,"set"],[72,22,71,20],[72,23,71,21,"key"],[72,26,71,24],[72,28,71,26,"newValue"],[72,36,71,34],[72,37,71,35],[73,14,72,12],[74,12,73,10],[74,13,73,11],[74,19,73,17],[75,14,74,12],[75,20,74,18],[75,24,74,22,"Error"],[75,29,74,27],[75,30,74,28],[75,52,74,50,"newValue"],[75,60,74,58],[75,81,74,79],[75,82,74,80],[76,12,75,10],[77,10,76,8],[78,12,77,10],[78,18,77,16],[78,22,77,20,"Error"],[78,27,77,25],[78,28,77,26],[78,42,77,40],[78,49,77,47,"newValue"],[78,57,77,55],[78,77,77,75],[78,78,77,76],[79,8,78,6],[80,6,79,4],[80,7,79,5],[80,9,79,7],[80,10,79,8,"key"],[80,13,79,11],[80,15,79,13,"mmkv"],[80,19,79,17],[80,20,79,18],[80,21,79,19],[82,6,81,4],[83,6,82,4],[83,7,82,5],[83,8,82,6],[83,10,82,8,"_react"],[83,16,82,14],[83,17,82,15,"useEffect"],[83,26,82,24],[83,28,82,26],[83,34,82,32],[84,8,83,6],[84,14,83,12,"listener"],[84,22,83,20],[84,25,83,23,"mmkv"],[84,29,83,27],[84,30,83,28,"addOnValueChangedListener"],[84,55,83,53],[84,56,83,54,"changedKey"],[84,66,83,64],[84,70,83,68],[85,10,84,8],[85,14,84,12,"changedKey"],[85,24,84,22],[85,29,84,27,"key"],[85,32,84,30],[85,34,84,32],[86,12,85,10,"setBump"],[86,19,85,17],[86,20,85,18,"b"],[86,21,85,19],[86,25,85,23,"b"],[86,26,85,24],[86,29,85,27],[86,30,85,28],[86,31,85,29],[87,10,86,8],[88,8,87,6],[88,9,87,7],[88,10,87,8],[89,8,88,6],[89,15,88,13],[89,21,88,19,"listener"],[89,29,88,27],[89,30,88,28,"remove"],[89,36,88,34],[89,37,88,35],[89,38,88,36],[90,6,89,4],[90,7,89,5],[90,9,89,7],[90,10,89,8,"key"],[90,13,89,11],[90,15,89,13,"mmkv"],[90,19,89,17],[90,20,89,18],[90,21,89,19],[91,6,90,4],[91,13,90,11],[91,14,90,12,"value"],[91,19,90,17],[91,21,90,19,"set"],[91,24,90,22],[91,25,90,23],[92,4,91,2],[92,5,91,3],[93,2,92,0],[95,2,94,0],[96,0,95,0],[97,0,96,0],[98,0,97,0],[99,0,98,0],[100,0,99,0],[101,0,100,0],[102,0,101,0],[103,0,102,0],[104,0,103,0],[105,2,104,0],[105,8,104,6,"useMMKVString"],[105,21,104,19],[105,24,104,22,"exports"],[105,31,104,29],[105,32,104,30,"useMMKVString"],[105,45,104,43],[105,48,104,46,"createMMKVHook"],[105,62,104,60],[105,63,104,61],[105,64,104,62,"instance"],[105,72,104,70],[105,74,104,72,"key"],[105,77,104,75],[105,82,104,80,"instance"],[105,90,104,88],[105,91,104,89,"getString"],[105,100,104,98],[105,101,104,99,"key"],[105,104,104,102],[105,105,104,103],[105,106,104,104],[107,2,106,0],[108,0,107,0],[109,0,108,0],[110,0,109,0],[111,0,110,0],[112,0,111,0],[113,0,112,0],[114,0,113,0],[115,0,114,0],[116,0,115,0],[117,2,116,0],[117,8,116,6,"useMMKVNumber"],[117,21,116,19],[117,24,116,22,"exports"],[117,31,116,29],[117,32,116,30,"useMMKVNumber"],[117,45,116,43],[117,48,116,46,"createMMKVHook"],[117,62,116,60],[117,63,116,61],[117,64,116,62,"instance"],[117,72,116,70],[117,74,116,72,"key"],[117,77,116,75],[117,82,116,80,"instance"],[117,90,116,88],[117,91,116,89,"getNumber"],[117,100,116,98],[117,101,116,99,"key"],[117,104,116,102],[117,105,116,103],[117,106,116,104],[118,2,117,0],[119,0,118,0],[120,0,119,0],[121,0,120,0],[122,0,121,0],[123,0,122,0],[124,0,123,0],[125,0,124,0],[126,0,125,0],[127,0,126,0],[128,2,127,0],[128,8,127,6,"useMMKVBoolean"],[128,22,127,20],[128,25,127,23,"exports"],[128,32,127,30],[128,33,127,31,"useMMKVBoolean"],[128,47,127,45],[128,50,127,48,"createMMKVHook"],[128,64,127,62],[128,65,127,63],[128,66,127,64,"instance"],[128,74,127,72],[128,76,127,74,"key"],[128,79,127,77],[128,84,127,82,"instance"],[128,92,127,90],[128,93,127,91,"getBoolean"],[128,103,127,101],[128,104,127,102,"key"],[128,107,127,105],[128,108,127,106],[128,109,127,107],[129,2,128,0],[130,0,129,0],[131,0,130,0],[132,0,131,0],[133,0,132,0],[134,0,133,0],[135,0,134,0],[136,0,135,0],[137,0,136,0],[138,0,137,0],[139,2,138,0],[139,8,138,6,"useMMKVBuffer"],[139,21,138,19],[139,24,138,22,"exports"],[139,31,138,29],[139,32,138,30,"useMMKVBuffer"],[139,45,138,43],[139,48,138,46,"createMMKVHook"],[139,62,138,60],[139,63,138,61],[139,64,138,62,"instance"],[139,72,138,70],[139,74,138,72,"key"],[139,77,138,75],[139,82,138,80,"instance"],[139,90,138,88],[139,91,138,89,"getBuffer"],[139,100,138,98],[139,101,138,99,"key"],[139,104,138,102],[139,105,138,103],[139,106,138,104],[140,2,139,0],[141,0,140,0],[142,0,141,0],[143,0,142,0],[144,0,143,0],[145,0,144,0],[146,0,145,0],[147,0,146,0],[148,0,147,0],[149,0,148,0],[150,0,149,0],[151,0,150,0],[152,2,151,0],[152,11,151,9,"useMMKVObject"],[152,24,151,22,"useMMKVObject"],[152,25,151,23,"key"],[152,28,151,26],[152,30,151,28,"instance"],[152,38,151,36],[152,40,151,38],[153,4,152,2],[153,10,152,8],[153,11,152,9,"json"],[153,15,152,13],[153,17,152,15,"setJson"],[153,24,152,22],[153,25,152,23],[153,28,152,26,"useMMKVString"],[153,41,152,39],[153,42,152,40,"key"],[153,45,152,43],[153,47,152,45,"instance"],[153,55,152,53],[153,56,152,54],[154,4,153,2],[154,10,153,8,"value"],[154,15,153,13],[154,18,153,16],[154,19,153,17],[154,20,153,18],[154,22,153,20,"_react"],[154,28,153,26],[154,29,153,27,"useMemo"],[154,36,153,34],[154,38,153,36],[154,44,153,42],[155,6,154,4],[155,10,154,8,"json"],[155,14,154,12],[155,18,154,16],[155,22,154,20],[155,24,154,22],[155,31,154,29,"undefined"],[155,40,154,38],[156,6,155,4],[156,13,155,11,"JSON"],[156,17,155,15],[156,18,155,16,"parse"],[156,23,155,21],[156,24,155,22,"json"],[156,28,155,26],[156,29,155,27],[157,4,156,2],[157,5,156,3],[157,7,156,5],[157,8,156,6,"json"],[157,12,156,10],[157,13,156,11],[157,14,156,12],[158,4,157,2],[158,10,157,8,"setValue"],[158,18,157,16],[158,21,157,19],[158,22,157,20],[158,23,157,21],[158,25,157,23,"_react"],[158,31,157,29],[158,32,157,30,"useCallback"],[158,43,157,41],[158,45,157,43,"v"],[158,46,157,44],[158,50,157,48],[159,6,158,4],[159,10,158,8,"v"],[159,11,158,9],[159,23,158,21,"Function"],[159,31,158,29],[159,33,158,31],[160,8,159,6,"setJson"],[160,15,159,13],[160,16,159,14,"currentJson"],[160,27,159,25],[160,31,159,29],[161,10,160,8],[161,16,160,14,"currentValue"],[161,28,160,26],[161,31,160,29,"currentJson"],[161,42,160,40],[161,46,160,44],[161,50,160,48],[161,53,160,51,"JSON"],[161,57,160,55],[161,58,160,56,"parse"],[161,63,160,61],[161,64,160,62,"currentJson"],[161,75,160,73],[161,76,160,74],[161,79,160,77,"undefined"],[161,88,160,86],[162,10,161,8],[162,16,161,14,"newValue"],[162,24,161,22],[162,27,161,25,"v"],[162,28,161,26],[162,29,161,27,"currentValue"],[162,41,161,39],[162,42,161,40],[163,10,162,8],[164,10,163,8],[164,17,163,15,"newValue"],[164,25,163,23],[164,29,163,27],[164,33,163,31],[164,36,163,34,"JSON"],[164,40,163,38],[164,41,163,39,"stringify"],[164,50,163,48],[164,51,163,49,"newValue"],[164,59,163,57],[164,60,163,58],[164,63,163,61,"undefined"],[164,72,163,70],[165,8,164,6],[165,9,164,7],[165,10,164,8],[166,6,165,4],[166,7,165,5],[166,13,165,11],[167,8,166,6],[168,8,167,6],[168,14,167,12,"newValue"],[168,22,167,20],[168,25,167,23,"v"],[168,26,167,24],[168,30,167,28],[168,34,167,32],[168,37,167,35,"JSON"],[168,41,167,39],[168,42,167,40,"stringify"],[168,51,167,49],[168,52,167,50,"v"],[168,53,167,51],[168,54,167,52],[168,57,167,55,"undefined"],[168,66,167,64],[169,8,168,6,"setJson"],[169,15,168,13],[169,16,168,14,"newValue"],[169,24,168,22],[169,25,168,23],[170,6,169,4],[171,4,170,2],[171,5,170,3],[171,7,170,5],[171,8,170,6,"setJson"],[171,15,170,13],[171,16,170,14],[171,17,170,15],[172,4,171,2],[172,11,171,9],[172,12,171,10,"value"],[172,17,171,15],[172,19,171,17,"setValue"],[172,27,171,25],[172,28,171,26],[173,2,172,0],[175,2,174,0],[176,0,175,0],[177,0,176,0],[178,0,177,0],[179,0,178,0],[180,0,179,0],[181,0,180,0],[182,0,181,0],[183,0,182,0],[184,0,183,0],[185,0,184,0],[186,0,185,0],[187,0,186,0],[188,2,187,0],[188,11,187,9,"useMMKVListener"],[188,26,187,24,"useMMKVListener"],[188,27,187,25,"valueChangedListener"],[188,47,187,45],[188,49,187,47,"instance"],[188,57,187,55],[188,59,187,57],[189,4,188,2],[189,10,188,8,"ref"],[189,13,188,11],[189,16,188,14],[189,17,188,15],[189,18,188,16],[189,20,188,18,"_react"],[189,26,188,24],[189,27,188,25,"useRef"],[189,33,188,31],[189,35,188,33,"valueChangedListener"],[189,55,188,53],[189,56,188,54],[190,4,189,2,"ref"],[190,7,189,5],[190,8,189,6,"current"],[190,15,189,13],[190,18,189,16,"valueChangedListener"],[190,38,189,36],[191,4,190,2],[191,10,190,8,"mmkv"],[191,14,190,12],[191,17,190,15,"instance"],[191,25,190,23],[191,29,190,27,"getDefaultInstance"],[191,47,190,45],[191,48,190,46],[191,49,190,47],[192,4,191,2],[192,5,191,3],[192,6,191,4],[192,8,191,6,"_react"],[192,14,191,12],[192,15,191,13,"useEffect"],[192,24,191,22],[192,26,191,24],[192,32,191,30],[193,6,192,4],[193,12,192,10,"listener"],[193,20,192,18],[193,23,192,21,"mmkv"],[193,27,192,25],[193,28,192,26,"addOnValueChangedListener"],[193,53,192,51],[193,54,192,52,"changedKey"],[193,64,192,62],[193,68,192,66],[194,8,193,6,"ref"],[194,11,193,9],[194,12,193,10,"current"],[194,19,193,17],[194,20,193,18,"changedKey"],[194,30,193,28],[194,31,193,29],[195,6,194,4],[195,7,194,5],[195,8,194,6],[196,6,195,4],[196,13,195,11],[196,19,195,17,"listener"],[196,27,195,25],[196,28,195,26,"remove"],[196,34,195,32],[196,35,195,33],[196,36,195,34],[197,4,196,2],[197,5,196,3],[197,7,196,5],[197,8,196,6,"mmkv"],[197,12,196,10],[197,13,196,11],[197,14,196,12],[198,2,197,0],[199,0,197,1],[199,3]],"functionMap":{"names":["<global>","isConfigurationEqual","getDefaultInstance","useMMKV","createMMKVHook","<anonymous>","mmkv.addOnValueChangedListener$argument_0","setBump$argument_0","createMMKVHook$argument_0","useMMKVObject","setJson$argument_0","useMMKVListener"],"mappings":"AAA;ACa;CDG;AEE;CFK;AGW;CHS;AIC;SCC;sDCqC;kBCE,UD;ODE;GDI;CJC;6DQY,0CR;6DQY,0CR;+DQW,2CR;6DQW,0CR;ASa;oCJE;GIG;2CJC;cKE;OLK;GIM;CTE;AWe;wBNI;oDCC;KDE;GME;CXC"}},"type":"js/module"}]}