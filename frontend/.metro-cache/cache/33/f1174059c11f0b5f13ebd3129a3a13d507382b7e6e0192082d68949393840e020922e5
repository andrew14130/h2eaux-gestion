{"dependencies":[{"name":"../../_lib/buildMatchPatternFn.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":72,"index":72}}],"key":"L8Xdo6QVO2i+lcAsQwScZEOC6W8=","exportNames":["*"]}},{"name":"../../_lib/buildMatchFn.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":73},"end":{"line":2,"column":58,"index":131}}],"key":"WfxmnHvZGPGMeHFDPiUVBiH8bNo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.match = void 0;\n  var _buildMatchPatternFn = require(_dependencyMap[0], \"../../_lib/buildMatchPatternFn.js\");\n  var _buildMatchFn = require(_dependencyMap[1], \"../../_lib/buildMatchFn.js\");\n  const matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\n  const parseOrdinalNumberPattern = /\\d+/i;\n  const matchEraPatterns = {\n    narrow: /^(ac|dc|a|d)/i,\n    abbreviated: /^(a\\.?\\s?c\\.?|a\\.?\\s?e\\.?\\s?c\\.?|d\\.?\\s?c\\.?|e\\.?\\s?c\\.?)/i,\n    wide: /^(antes de cristo|antes de la era com[uú]n|despu[eé]s de cristo|era com[uú]n)/i\n  };\n  const parseEraPatterns = {\n    any: [/^ac/i, /^dc/i],\n    wide: [/^(antes de cristo|antes de la era com[uú]n)/i, /^(despu[eé]s de cristo|era com[uú]n)/i]\n  };\n  const matchQuarterPatterns = {\n    narrow: /^[1234]/i,\n    abbreviated: /^T[1234]/i,\n    wide: /^[1234](º)? trimestre/i\n  };\n  const parseQuarterPatterns = {\n    any: [/1/i, /2/i, /3/i, /4/i]\n  };\n  const matchMonthPatterns = {\n    narrow: /^[efmajsond]/i,\n    abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,\n    wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i\n  };\n  const parseMonthPatterns = {\n    narrow: [/^e/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n    any: [/^en/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]\n  };\n  const matchDayPatterns = {\n    narrow: /^[dlmjvs]/i,\n    short: /^(do|lu|ma|mi|ju|vi|s[áa])/i,\n    abbreviated: /^(dom|lun|mar|mi[ée]|jue|vie|s[áa]b)/i,\n    wide: /^(domingo|lunes|martes|mi[ée]rcoles|jueves|viernes|s[áa]bado)/i\n  };\n  const parseDayPatterns = {\n    narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n    any: [/^do/i, /^lu/i, /^ma/i, /^mi/i, /^ju/i, /^vi/i, /^sa/i]\n  };\n  const matchDayPeriodPatterns = {\n    narrow: /^(a|p|mn|md|(de la|a las) (mañana|tarde|noche))/i,\n    any: /^([ap]\\.?\\s?m\\.?|medianoche|mediodia|(de la|a las) (mañana|tarde|noche))/i\n  };\n  const parseDayPeriodPatterns = {\n    any: {\n      am: /^a/i,\n      pm: /^p/i,\n      midnight: /^mn/i,\n      noon: /^md/i,\n      morning: /mañana/i,\n      afternoon: /tarde/i,\n      evening: /tarde/i,\n      night: /noche/i\n    }\n  };\n  const match = exports.match = {\n    ordinalNumber: (0, _buildMatchPatternFn.buildMatchPatternFn)({\n      matchPattern: matchOrdinalNumberPattern,\n      parsePattern: parseOrdinalNumberPattern,\n      valueCallback: function (value) {\n        return parseInt(value, 10);\n      }\n    }),\n    era: (0, _buildMatchFn.buildMatchFn)({\n      matchPatterns: matchEraPatterns,\n      defaultMatchWidth: \"wide\",\n      parsePatterns: parseEraPatterns,\n      defaultParseWidth: \"any\"\n    }),\n    quarter: (0, _buildMatchFn.buildMatchFn)({\n      matchPatterns: matchQuarterPatterns,\n      defaultMatchWidth: \"wide\",\n      parsePatterns: parseQuarterPatterns,\n      defaultParseWidth: \"any\",\n      valueCallback: index => index + 1\n    }),\n    month: (0, _buildMatchFn.buildMatchFn)({\n      matchPatterns: matchMonthPatterns,\n      defaultMatchWidth: \"wide\",\n      parsePatterns: parseMonthPatterns,\n      defaultParseWidth: \"any\"\n    }),\n    day: (0, _buildMatchFn.buildMatchFn)({\n      matchPatterns: matchDayPatterns,\n      defaultMatchWidth: \"wide\",\n      parsePatterns: parseDayPatterns,\n      defaultParseWidth: \"any\"\n    }),\n    dayPeriod: (0, _buildMatchFn.buildMatchFn)({\n      matchPatterns: matchDayPeriodPatterns,\n      defaultMatchWidth: \"any\",\n      parsePatterns: parseDayPeriodPatterns,\n      defaultParseWidth: \"any\"\n    })\n  };\n});","lineCount":102,"map":[[6,2,1,0],[6,6,1,0,"_buildMatchPatternFn"],[6,26,1,0],[6,29,1,0,"require"],[6,36,1,0],[6,37,1,0,"_dependencyMap"],[6,51,1,0],[7,2,2,0],[7,6,2,0,"_buildMatchFn"],[7,19,2,0],[7,22,2,0,"require"],[7,29,2,0],[7,30,2,0,"_dependencyMap"],[7,44,2,0],[8,2,4,0],[8,8,4,6,"matchOrdinalNumberPattern"],[8,33,4,31],[8,36,4,34],[8,49,4,47],[9,2,5,0],[9,8,5,6,"parseOrdinalNumberPattern"],[9,33,5,31],[9,36,5,34],[9,42,5,40],[10,2,7,0],[10,8,7,6,"matchEraPatterns"],[10,24,7,22],[10,27,7,25],[11,4,8,2,"narrow"],[11,10,8,8],[11,12,8,10],[11,27,8,25],[12,4,9,2,"abbreviated"],[12,15,9,13],[12,17,9,15],[12,77,9,75],[13,4,10,2,"wide"],[13,8,10,6],[13,10,10,8],[14,2,11,0],[14,3,11,1],[15,2,12,0],[15,8,12,6,"parseEraPatterns"],[15,24,12,22],[15,27,12,25],[16,4,13,2,"any"],[16,7,13,5],[16,9,13,7],[16,10,13,8],[16,16,13,14],[16,18,13,16],[16,24,13,22],[16,25,13,23],[17,4,14,2,"wide"],[17,8,14,6],[17,10,14,8],[17,11,15,4],[17,57,15,50],[17,59,16,4],[17,98,16,43],[18,2,18,0],[18,3,18,1],[19,2,20,0],[19,8,20,6,"matchQuarterPatterns"],[19,28,20,26],[19,31,20,29],[20,4,21,2,"narrow"],[20,10,21,8],[20,12,21,10],[20,22,21,20],[21,4,22,2,"abbreviated"],[21,15,22,13],[21,17,22,15],[21,28,22,26],[22,4,23,2,"wide"],[22,8,23,6],[22,10,23,8],[23,2,24,0],[23,3,24,1],[24,2,25,0],[24,8,25,6,"parseQuarterPatterns"],[24,28,25,26],[24,31,25,29],[25,4,26,2,"any"],[25,7,26,5],[25,9,26,7],[25,10,26,8],[25,14,26,12],[25,16,26,14],[25,20,26,18],[25,22,26,20],[25,26,26,24],[25,28,26,26],[25,32,26,30],[26,2,27,0],[26,3,27,1],[27,2,29,0],[27,8,29,6,"matchMonthPatterns"],[27,26,29,24],[27,29,29,27],[28,4,30,2,"narrow"],[28,10,30,8],[28,12,30,10],[28,27,30,25],[29,4,31,2,"abbreviated"],[29,15,31,13],[29,17,31,15],[29,70,31,68],[30,4,32,2,"wide"],[30,8,32,6],[30,10,32,8],[31,2,33,0],[31,3,33,1],[32,2,34,0],[32,8,34,6,"parseMonthPatterns"],[32,26,34,24],[32,29,34,27],[33,4,35,2,"narrow"],[33,10,35,8],[33,12,35,10],[33,13,36,4],[33,18,36,9],[33,20,37,4],[33,25,37,9],[33,27,38,4],[33,32,38,9],[33,34,39,4],[33,39,39,9],[33,41,40,4],[33,46,40,9],[33,48,41,4],[33,53,41,9],[33,55,42,4],[33,60,42,9],[33,62,43,4],[33,67,43,9],[33,69,44,4],[33,74,44,9],[33,76,45,4],[33,81,45,9],[33,83,46,4],[33,88,46,9],[33,90,47,4],[33,95,47,9],[33,96,48,3],[34,4,50,2,"any"],[34,7,50,5],[34,9,50,7],[34,10,51,4],[34,16,51,10],[34,18,52,4],[34,25,52,11],[34,27,53,4],[34,34,53,11],[34,36,54,4],[34,43,54,11],[34,45,55,4],[34,52,55,11],[34,54,56,4],[34,61,56,11],[34,63,57,4],[34,70,57,11],[34,72,58,4],[34,79,58,11],[34,81,59,4],[34,88,59,11],[34,90,60,4],[34,97,60,11],[34,99,61,4],[34,106,61,11],[34,108,62,4],[34,115,62,11],[35,2,64,0],[35,3,64,1],[36,2,66,0],[36,8,66,6,"matchDayPatterns"],[36,24,66,22],[36,27,66,25],[37,4,67,2,"narrow"],[37,10,67,8],[37,12,67,10],[37,24,67,22],[38,4,68,2,"short"],[38,9,68,7],[38,11,68,9],[38,40,68,38],[39,4,69,2,"abbreviated"],[39,15,69,13],[39,17,69,15],[39,56,69,54],[40,4,70,2,"wide"],[40,8,70,6],[40,10,70,8],[41,2,71,0],[41,3,71,1],[42,2,72,0],[42,8,72,6,"parseDayPatterns"],[42,24,72,22],[42,27,72,25],[43,4,73,2,"narrow"],[43,10,73,8],[43,12,73,10],[43,13,73,11],[43,18,73,16],[43,20,73,18],[43,25,73,23],[43,27,73,25],[43,32,73,30],[43,34,73,32],[43,39,73,37],[43,41,73,39],[43,46,73,44],[43,48,73,46],[43,53,73,51],[43,55,73,53],[43,60,73,58],[43,61,73,59],[44,4,74,2,"any"],[44,7,74,5],[44,9,74,7],[44,10,74,8],[44,16,74,14],[44,18,74,16],[44,24,74,22],[44,26,74,24],[44,32,74,30],[44,34,74,32],[44,40,74,38],[44,42,74,40],[44,48,74,46],[44,50,74,48],[44,56,74,54],[44,58,74,56],[44,64,74,62],[45,2,75,0],[45,3,75,1],[46,2,77,0],[46,8,77,6,"matchDayPeriodPatterns"],[46,30,77,28],[46,33,77,31],[47,4,78,2,"narrow"],[47,10,78,8],[47,12,78,10],[47,62,78,60],[48,4,79,2,"any"],[48,7,79,5],[48,9,79,7],[49,2,80,0],[49,3,80,1],[50,2,81,0],[50,8,81,6,"parseDayPeriodPatterns"],[50,30,81,28],[50,33,81,31],[51,4,82,2,"any"],[51,7,82,5],[51,9,82,7],[52,6,83,4,"am"],[52,8,83,6],[52,10,83,8],[52,15,83,13],[53,6,84,4,"pm"],[53,8,84,6],[53,10,84,8],[53,15,84,13],[54,6,85,4,"midnight"],[54,14,85,12],[54,16,85,14],[54,22,85,20],[55,6,86,4,"noon"],[55,10,86,8],[55,12,86,10],[55,18,86,16],[56,6,87,4,"morning"],[56,13,87,11],[56,15,87,13],[56,24,87,22],[57,6,88,4,"afternoon"],[57,15,88,13],[57,17,88,15],[57,25,88,23],[58,6,89,4,"evening"],[58,13,89,11],[58,15,89,13],[58,23,89,21],[59,6,90,4,"night"],[59,11,90,9],[59,13,90,11],[60,4,91,2],[61,2,92,0],[61,3,92,1],[62,2,94,7],[62,8,94,13,"match"],[62,13,94,18],[62,16,94,18,"exports"],[62,23,94,18],[62,24,94,18,"match"],[62,29,94,18],[62,32,94,21],[63,4,95,2,"ordinalNumber"],[63,17,95,15],[63,19,95,17],[63,23,95,17,"buildMatchPatternFn"],[63,63,95,36],[63,65,95,37],[64,6,96,4,"matchPattern"],[64,18,96,16],[64,20,96,18,"matchOrdinalNumberPattern"],[64,45,96,43],[65,6,97,4,"parsePattern"],[65,18,97,16],[65,20,97,18,"parseOrdinalNumberPattern"],[65,45,97,43],[66,6,98,4,"valueCallback"],[66,19,98,17],[66,21,98,19],[66,30,98,19,"valueCallback"],[66,31,98,29,"value"],[66,36,98,34],[66,38,98,36],[67,8,99,6],[67,15,99,13,"parseInt"],[67,23,99,21],[67,24,99,22,"value"],[67,29,99,27],[67,31,99,29],[67,33,99,31],[67,34,99,32],[68,6,100,4],[69,4,101,2],[69,5,101,3],[69,6,101,4],[70,4,103,2,"era"],[70,7,103,5],[70,9,103,7],[70,13,103,7,"buildMatchFn"],[70,39,103,19],[70,41,103,20],[71,6,104,4,"matchPatterns"],[71,19,104,17],[71,21,104,19,"matchEraPatterns"],[71,37,104,35],[72,6,105,4,"defaultMatchWidth"],[72,23,105,21],[72,25,105,23],[72,31,105,29],[73,6,106,4,"parsePatterns"],[73,19,106,17],[73,21,106,19,"parseEraPatterns"],[73,37,106,35],[74,6,107,4,"defaultParseWidth"],[74,23,107,21],[74,25,107,23],[75,4,108,2],[75,5,108,3],[75,6,108,4],[76,4,110,2,"quarter"],[76,11,110,9],[76,13,110,11],[76,17,110,11,"buildMatchFn"],[76,43,110,23],[76,45,110,24],[77,6,111,4,"matchPatterns"],[77,19,111,17],[77,21,111,19,"matchQuarterPatterns"],[77,41,111,39],[78,6,112,4,"defaultMatchWidth"],[78,23,112,21],[78,25,112,23],[78,31,112,29],[79,6,113,4,"parsePatterns"],[79,19,113,17],[79,21,113,19,"parseQuarterPatterns"],[79,41,113,39],[80,6,114,4,"defaultParseWidth"],[80,23,114,21],[80,25,114,23],[80,30,114,28],[81,6,115,4,"valueCallback"],[81,19,115,17],[81,21,115,20,"index"],[81,26,115,25],[81,30,115,30,"index"],[81,35,115,35],[81,38,115,38],[82,4,116,2],[82,5,116,3],[82,6,116,4],[83,4,118,2,"month"],[83,9,118,7],[83,11,118,9],[83,15,118,9,"buildMatchFn"],[83,41,118,21],[83,43,118,22],[84,6,119,4,"matchPatterns"],[84,19,119,17],[84,21,119,19,"matchMonthPatterns"],[84,39,119,37],[85,6,120,4,"defaultMatchWidth"],[85,23,120,21],[85,25,120,23],[85,31,120,29],[86,6,121,4,"parsePatterns"],[86,19,121,17],[86,21,121,19,"parseMonthPatterns"],[86,39,121,37],[87,6,122,4,"defaultParseWidth"],[87,23,122,21],[87,25,122,23],[88,4,123,2],[88,5,123,3],[88,6,123,4],[89,4,125,2,"day"],[89,7,125,5],[89,9,125,7],[89,13,125,7,"buildMatchFn"],[89,39,125,19],[89,41,125,20],[90,6,126,4,"matchPatterns"],[90,19,126,17],[90,21,126,19,"matchDayPatterns"],[90,37,126,35],[91,6,127,4,"defaultMatchWidth"],[91,23,127,21],[91,25,127,23],[91,31,127,29],[92,6,128,4,"parsePatterns"],[92,19,128,17],[92,21,128,19,"parseDayPatterns"],[92,37,128,35],[93,6,129,4,"defaultParseWidth"],[93,23,129,21],[93,25,129,23],[94,4,130,2],[94,5,130,3],[94,6,130,4],[95,4,132,2,"dayPeriod"],[95,13,132,11],[95,15,132,13],[95,19,132,13,"buildMatchFn"],[95,45,132,25],[95,47,132,26],[96,6,133,4,"matchPatterns"],[96,19,133,17],[96,21,133,19,"matchDayPeriodPatterns"],[96,43,133,41],[97,6,134,4,"defaultMatchWidth"],[97,23,134,21],[97,25,134,23],[97,30,134,28],[98,6,135,4,"parsePatterns"],[98,19,135,17],[98,21,135,19,"parseDayPeriodPatterns"],[98,43,135,41],[99,6,136,4,"defaultParseWidth"],[99,23,136,21],[99,25,136,23],[100,4,137,2],[100,5,137,3],[101,2,138,0],[101,3,138,1],[102,0,138,2],[102,3]],"functionMap":{"names":["<global>","buildMatchPatternFn$argument_0.valueCallback","buildMatchFn$argument_0.valueCallback"],"mappings":"AAA;mBCiG;KDE;mBEe,oBF"}},"type":"js/module"}]}