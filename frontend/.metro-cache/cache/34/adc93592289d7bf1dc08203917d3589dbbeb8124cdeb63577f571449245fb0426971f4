{"dependencies":[{"name":"./createTextEncoder","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":25,"index":134},"end":{"line":7,"column":55,"index":164}}],"key":"74edYwqwhZrdEuF9CF88CY2Rm+c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMMKV = void 0;\n  var _createTextEncoder = require(_dependencyMap[0], \"./createTextEncoder\");\n  /* global localStorage */\n\n  const canUseDOM = false && window.document?.createElement != null;\n  const hasAccessToLocalStorage = () => {\n    try {\n      // throws ACCESS_DENIED error\n      window.localStorage;\n      return true;\n    } catch {\n      return false;\n    }\n  };\n  const KEY_WILDCARD = '\\\\';\n  const inMemoryStorage = new Map();\n  const createMMKV = config => {\n    if (config.encryptionKey != null) {\n      throw new Error(\"MMKV: 'encryptionKey' is not supported on Web!\");\n    }\n    if (config.path != null) {\n      throw new Error(\"MMKV: 'path' is not supported on Web!\");\n    }\n\n    // canUseDOM check prevents spam in Node server environments, such as Next.js server side props.\n    if (!hasAccessToLocalStorage() && canUseDOM) {\n      console.warn('MMKV: LocalStorage has been disabled. Your experience will be limited to in-memory storage!');\n    }\n    const storage = () => {\n      if (!canUseDOM) {\n        throw new Error('Tried to access storage on the server. Did you forget to call this in useEffect?');\n      }\n      if (!hasAccessToLocalStorage()) {\n        return {\n          getItem: key => inMemoryStorage.get(key) ?? null,\n          setItem: (key, value) => inMemoryStorage.set(key, value),\n          removeItem: key => inMemoryStorage.delete(key),\n          clear: () => inMemoryStorage.clear(),\n          length: inMemoryStorage.size,\n          key: index => Object.keys(inMemoryStorage).at(index) ?? null\n        };\n      }\n      const domStorage = global?.localStorage ?? window?.localStorage ?? localStorage;\n      if (domStorage == null) {\n        throw new Error(`Could not find 'localStorage' instance!`);\n      }\n      return domStorage;\n    };\n    const textEncoder = (0, _createTextEncoder.createTextEncoder)();\n    if (config.id.includes(KEY_WILDCARD)) {\n      throw new Error('MMKV: `id` cannot contain the backslash character (`\\\\`)!');\n    }\n    const keyPrefix = `${config.id}${KEY_WILDCARD}`; // mmkv.default\\\\\n    const prefixedKey = key => {\n      if (key.includes('\\\\')) {\n        throw new Error('MMKV: `key` cannot contain the backslash character (`\\\\`)!');\n      }\n      return `${keyPrefix}${key}`;\n    };\n    return {\n      clearAll: () => {\n        const keys = Object.keys(storage());\n        for (const key of keys) {\n          if (key.startsWith(keyPrefix)) {\n            storage().removeItem(key);\n          }\n        }\n      },\n      delete: key => storage().removeItem(prefixedKey(key)),\n      set: (key, value) => {\n        storage().setItem(prefixedKey(key), value.toString());\n      },\n      getString: key => storage().getItem(prefixedKey(key)) ?? undefined,\n      getNumber: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return Number(value);\n      },\n      getBoolean: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return value === 'true';\n      },\n      getBuffer: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return textEncoder.encode(value).buffer;\n      },\n      getAllKeys: () => {\n        const keys = Object.keys(storage());\n        return keys.filter(key => key.startsWith(keyPrefix)).map(key => key.slice(keyPrefix.length));\n      },\n      contains: key => storage().getItem(prefixedKey(key)) != null,\n      recrypt: () => {\n        throw new Error('`recrypt(..)` is not supported on Web!');\n      },\n      size: 0,\n      isReadOnly: false,\n      trim: () => {\n        // no-op\n      }\n    };\n  };\n  exports.createMMKV = createMMKV;\n});","lineCount":111,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"createMMKV"],[7,20,6,18],[7,23,6,21],[7,28,6,26],[7,29,6,27],[8,2,7,0],[8,6,7,4,"_createTextEncoder"],[8,24,7,22],[8,27,7,25,"require"],[8,34,7,32],[8,35,7,32,"_dependencyMap"],[8,49,7,32],[8,75,7,54],[8,76,7,55],[9,2,8,0],[11,2,10,0],[11,8,10,6,"canUseDOM"],[11,17,10,15],[11,20,10,18],[11,29,10,51,"window"],[11,35,10,57],[11,36,10,58,"document"],[11,44,10,66],[11,46,10,68,"createElement"],[11,59,10,81],[11,63,10,85],[11,67,10,89],[12,2,11,0],[12,8,11,6,"hasAccessToLocalStorage"],[12,31,11,29],[12,34,11,32,"hasAccessToLocalStorage"],[12,35,11,32],[12,40,11,38],[13,4,12,2],[13,8,12,6],[14,6,13,4],[15,6,14,4,"window"],[15,12,14,10],[15,13,14,11,"localStorage"],[15,25,14,23],[16,6,15,4],[16,13,15,11],[16,17,15,15],[17,4,16,2],[17,5,16,3],[17,6,16,4],[17,12,16,10],[18,6,17,4],[18,13,17,11],[18,18,17,16],[19,4,18,2],[20,2,19,0],[20,3,19,1],[21,2,20,0],[21,8,20,6,"KEY_WILDCARD"],[21,20,20,18],[21,23,20,21],[21,27,20,25],[22,2,21,0],[22,8,21,6,"inMemoryStorage"],[22,23,21,21],[22,26,21,24],[22,30,21,28,"Map"],[22,33,21,31],[22,34,21,32],[22,35,21,33],[23,2,22,0],[23,8,22,6,"createMMKV"],[23,18,22,16],[23,21,22,19,"config"],[23,27,22,25],[23,31,22,29],[24,4,23,2],[24,8,23,6,"config"],[24,14,23,12],[24,15,23,13,"encryptionKey"],[24,28,23,26],[24,32,23,30],[24,36,23,34],[24,38,23,36],[25,6,24,4],[25,12,24,10],[25,16,24,14,"Error"],[25,21,24,19],[25,22,24,20],[25,70,24,68],[25,71,24,69],[26,4,25,2],[27,4,26,2],[27,8,26,6,"config"],[27,14,26,12],[27,15,26,13,"path"],[27,19,26,17],[27,23,26,21],[27,27,26,25],[27,29,26,27],[28,6,27,4],[28,12,27,10],[28,16,27,14,"Error"],[28,21,27,19],[28,22,27,20],[28,61,27,59],[28,62,27,60],[29,4,28,2],[31,4,30,2],[32,4,31,2],[32,8,31,6],[32,9,31,7,"hasAccessToLocalStorage"],[32,32,31,30],[32,33,31,31],[32,34,31,32],[32,38,31,36,"canUseDOM"],[32,47,31,45],[32,49,31,47],[33,6,32,4,"console"],[33,13,32,11],[33,14,32,12,"warn"],[33,18,32,16],[33,19,32,17],[33,112,32,110],[33,113,32,111],[34,4,33,2],[35,4,34,2],[35,10,34,8,"storage"],[35,17,34,15],[35,20,34,18,"storage"],[35,21,34,18],[35,26,34,24],[36,6,35,4],[36,10,35,8],[36,11,35,9,"canUseDOM"],[36,20,35,18],[36,22,35,20],[37,8,36,6],[37,14,36,12],[37,18,36,16,"Error"],[37,23,36,21],[37,24,36,22],[37,106,36,104],[37,107,36,105],[38,6,37,4],[39,6,38,4],[39,10,38,8],[39,11,38,9,"hasAccessToLocalStorage"],[39,34,38,32],[39,35,38,33],[39,36,38,34],[39,38,38,36],[40,8,39,6],[40,15,39,13],[41,10,40,8,"getItem"],[41,17,40,15],[41,19,40,17,"key"],[41,22,40,20],[41,26,40,24,"inMemoryStorage"],[41,41,40,39],[41,42,40,40,"get"],[41,45,40,43],[41,46,40,44,"key"],[41,49,40,47],[41,50,40,48],[41,54,40,52],[41,58,40,56],[42,10,41,8,"setItem"],[42,17,41,15],[42,19,41,17,"setItem"],[42,20,41,18,"key"],[42,23,41,21],[42,25,41,23,"value"],[42,30,41,28],[42,35,41,33,"inMemoryStorage"],[42,50,41,48],[42,51,41,49,"set"],[42,54,41,52],[42,55,41,53,"key"],[42,58,41,56],[42,60,41,58,"value"],[42,65,41,63],[42,66,41,64],[43,10,42,8,"removeItem"],[43,20,42,18],[43,22,42,20,"key"],[43,25,42,23],[43,29,42,27,"inMemoryStorage"],[43,44,42,42],[43,45,42,43,"delete"],[43,51,42,49],[43,52,42,50,"key"],[43,55,42,53],[43,56,42,54],[44,10,43,8,"clear"],[44,15,43,13],[44,17,43,15,"clear"],[44,18,43,15],[44,23,43,21,"inMemoryStorage"],[44,38,43,36],[44,39,43,37,"clear"],[44,44,43,42],[44,45,43,43],[44,46,43,44],[45,10,44,8,"length"],[45,16,44,14],[45,18,44,16,"inMemoryStorage"],[45,33,44,31],[45,34,44,32,"size"],[45,38,44,36],[46,10,45,8,"key"],[46,13,45,11],[46,15,45,13,"index"],[46,20,45,18],[46,24,45,22,"Object"],[46,30,45,28],[46,31,45,29,"keys"],[46,35,45,33],[46,36,45,34,"inMemoryStorage"],[46,51,45,49],[46,52,45,50],[46,53,45,51,"at"],[46,55,45,53],[46,56,45,54,"index"],[46,61,45,59],[46,62,45,60],[46,66,45,64],[47,8,46,6],[47,9,46,7],[48,6,47,4],[49,6,48,4],[49,12,48,10,"domStorage"],[49,22,48,20],[49,25,48,23,"global"],[49,31,48,29],[49,33,48,31,"localStorage"],[49,45,48,43],[49,49,48,47,"window"],[49,55,48,53],[49,57,48,55,"localStorage"],[49,69,48,67],[49,73,48,71,"localStorage"],[49,85,48,83],[50,6,49,4],[50,10,49,8,"domStorage"],[50,20,49,18],[50,24,49,22],[50,28,49,26],[50,30,49,28],[51,8,50,6],[51,14,50,12],[51,18,50,16,"Error"],[51,23,50,21],[51,24,50,22],[51,65,50,63],[51,66,50,64],[52,6,51,4],[53,6,52,4],[53,13,52,11,"domStorage"],[53,23,52,21],[54,4,53,2],[54,5,53,3],[55,4,54,2],[55,10,54,8,"textEncoder"],[55,21,54,19],[55,24,54,22],[55,25,54,23],[55,26,54,24],[55,28,54,26,"_createTextEncoder"],[55,46,54,44],[55,47,54,45,"createTextEncoder"],[55,64,54,62],[55,66,54,64],[55,67,54,65],[56,4,55,2],[56,8,55,6,"config"],[56,14,55,12],[56,15,55,13,"id"],[56,17,55,15],[56,18,55,16,"includes"],[56,26,55,24],[56,27,55,25,"KEY_WILDCARD"],[56,39,55,37],[56,40,55,38],[56,42,55,40],[57,6,56,4],[57,12,56,10],[57,16,56,14,"Error"],[57,21,56,19],[57,22,56,20],[57,81,56,79],[57,82,56,80],[58,4,57,2],[59,4,58,2],[59,10,58,8,"keyPrefix"],[59,19,58,17],[59,22,58,20],[59,25,58,23,"config"],[59,31,58,29],[59,32,58,30,"id"],[59,34,58,32],[59,37,58,35,"KEY_WILDCARD"],[59,49,58,47],[59,51,58,49],[59,52,58,50],[59,53,58,51],[60,4,59,2],[60,10,59,8,"prefixedKey"],[60,21,59,19],[60,24,59,22,"key"],[60,27,59,25],[60,31,59,29],[61,6,60,4],[61,10,60,8,"key"],[61,13,60,11],[61,14,60,12,"includes"],[61,22,60,20],[61,23,60,21],[61,27,60,25],[61,28,60,26],[61,30,60,28],[62,8,61,6],[62,14,61,12],[62,18,61,16,"Error"],[62,23,61,21],[62,24,61,22],[62,84,61,82],[62,85,61,83],[63,6,62,4],[64,6,63,4],[64,13,63,11],[64,16,63,14,"keyPrefix"],[64,25,63,23],[64,28,63,26,"key"],[64,31,63,29],[64,33,63,31],[65,4,64,2],[65,5,64,3],[66,4,65,2],[66,11,65,9],[67,6,66,4,"clearAll"],[67,14,66,12],[67,16,66,14,"clearAll"],[67,17,66,14],[67,22,66,20],[68,8,67,6],[68,14,67,12,"keys"],[68,18,67,16],[68,21,67,19,"Object"],[68,27,67,25],[68,28,67,26,"keys"],[68,32,67,30],[68,33,67,31,"storage"],[68,40,67,38],[68,41,67,39],[68,42,67,40],[68,43,67,41],[69,8,68,6],[69,13,68,11],[69,19,68,17,"key"],[69,22,68,20],[69,26,68,24,"keys"],[69,30,68,28],[69,32,68,30],[70,10,69,8],[70,14,69,12,"key"],[70,17,69,15],[70,18,69,16,"startsWith"],[70,28,69,26],[70,29,69,27,"keyPrefix"],[70,38,69,36],[70,39,69,37],[70,41,69,39],[71,12,70,10,"storage"],[71,19,70,17],[71,20,70,18],[71,21,70,19],[71,22,70,20,"removeItem"],[71,32,70,30],[71,33,70,31,"key"],[71,36,70,34],[71,37,70,35],[72,10,71,8],[73,8,72,6],[74,6,73,4],[74,7,73,5],[75,6,74,4,"delete"],[75,12,74,10],[75,14,74,12,"key"],[75,17,74,15],[75,21,74,19,"storage"],[75,28,74,26],[75,29,74,27],[75,30,74,28],[75,31,74,29,"removeItem"],[75,41,74,39],[75,42,74,40,"prefixedKey"],[75,53,74,51],[75,54,74,52,"key"],[75,57,74,55],[75,58,74,56],[75,59,74,57],[76,6,75,4,"set"],[76,9,75,7],[76,11,75,9,"set"],[76,12,75,10,"key"],[76,15,75,13],[76,17,75,15,"value"],[76,22,75,20],[76,27,75,25],[77,8,76,6,"storage"],[77,15,76,13],[77,16,76,14],[77,17,76,15],[77,18,76,16,"setItem"],[77,25,76,23],[77,26,76,24,"prefixedKey"],[77,37,76,35],[77,38,76,36,"key"],[77,41,76,39],[77,42,76,40],[77,44,76,42,"value"],[77,49,76,47],[77,50,76,48,"toString"],[77,58,76,56],[77,59,76,57],[77,60,76,58],[77,61,76,59],[78,6,77,4],[78,7,77,5],[79,6,78,4,"getString"],[79,15,78,13],[79,17,78,15,"key"],[79,20,78,18],[79,24,78,22,"storage"],[79,31,78,29],[79,32,78,30],[79,33,78,31],[79,34,78,32,"getItem"],[79,41,78,39],[79,42,78,40,"prefixedKey"],[79,53,78,51],[79,54,78,52,"key"],[79,57,78,55],[79,58,78,56],[79,59,78,57],[79,63,78,61,"undefined"],[79,72,78,70],[80,6,79,4,"getNumber"],[80,15,79,13],[80,17,79,15,"key"],[80,20,79,18],[80,24,79,22],[81,8,80,6],[81,14,80,12,"value"],[81,19,80,17],[81,22,80,20,"storage"],[81,29,80,27],[81,30,80,28],[81,31,80,29],[81,32,80,30,"getItem"],[81,39,80,37],[81,40,80,38,"prefixedKey"],[81,51,80,49],[81,52,80,50,"key"],[81,55,80,53],[81,56,80,54],[81,57,80,55],[82,8,81,6],[82,12,81,10,"value"],[82,17,81,15],[82,21,81,19],[82,25,81,23],[82,27,81,25],[82,34,81,32,"undefined"],[82,43,81,41],[83,8,82,6],[83,15,82,13,"Number"],[83,21,82,19],[83,22,82,20,"value"],[83,27,82,25],[83,28,82,26],[84,6,83,4],[84,7,83,5],[85,6,84,4,"getBoolean"],[85,16,84,14],[85,18,84,16,"key"],[85,21,84,19],[85,25,84,23],[86,8,85,6],[86,14,85,12,"value"],[86,19,85,17],[86,22,85,20,"storage"],[86,29,85,27],[86,30,85,28],[86,31,85,29],[86,32,85,30,"getItem"],[86,39,85,37],[86,40,85,38,"prefixedKey"],[86,51,85,49],[86,52,85,50,"key"],[86,55,85,53],[86,56,85,54],[86,57,85,55],[87,8,86,6],[87,12,86,10,"value"],[87,17,86,15],[87,21,86,19],[87,25,86,23],[87,27,86,25],[87,34,86,32,"undefined"],[87,43,86,41],[88,8,87,6],[88,15,87,13,"value"],[88,20,87,18],[88,25,87,23],[88,31,87,29],[89,6,88,4],[89,7,88,5],[90,6,89,4,"getBuffer"],[90,15,89,13],[90,17,89,15,"key"],[90,20,89,18],[90,24,89,22],[91,8,90,6],[91,14,90,12,"value"],[91,19,90,17],[91,22,90,20,"storage"],[91,29,90,27],[91,30,90,28],[91,31,90,29],[91,32,90,30,"getItem"],[91,39,90,37],[91,40,90,38,"prefixedKey"],[91,51,90,49],[91,52,90,50,"key"],[91,55,90,53],[91,56,90,54],[91,57,90,55],[92,8,91,6],[92,12,91,10,"value"],[92,17,91,15],[92,21,91,19],[92,25,91,23],[92,27,91,25],[92,34,91,32,"undefined"],[92,43,91,41],[93,8,92,6],[93,15,92,13,"textEncoder"],[93,26,92,24],[93,27,92,25,"encode"],[93,33,92,31],[93,34,92,32,"value"],[93,39,92,37],[93,40,92,38],[93,41,92,39,"buffer"],[93,47,92,45],[94,6,93,4],[94,7,93,5],[95,6,94,4,"getAllKeys"],[95,16,94,14],[95,18,94,16,"getAllKeys"],[95,19,94,16],[95,24,94,22],[96,8,95,6],[96,14,95,12,"keys"],[96,18,95,16],[96,21,95,19,"Object"],[96,27,95,25],[96,28,95,26,"keys"],[96,32,95,30],[96,33,95,31,"storage"],[96,40,95,38],[96,41,95,39],[96,42,95,40],[96,43,95,41],[97,8,96,6],[97,15,96,13,"keys"],[97,19,96,17],[97,20,96,18,"filter"],[97,26,96,24],[97,27,96,25,"key"],[97,30,96,28],[97,34,96,32,"key"],[97,37,96,35],[97,38,96,36,"startsWith"],[97,48,96,46],[97,49,96,47,"keyPrefix"],[97,58,96,56],[97,59,96,57],[97,60,96,58],[97,61,96,59,"map"],[97,64,96,62],[97,65,96,63,"key"],[97,68,96,66],[97,72,96,70,"key"],[97,75,96,73],[97,76,96,74,"slice"],[97,81,96,79],[97,82,96,80,"keyPrefix"],[97,91,96,89],[97,92,96,90,"length"],[97,98,96,96],[97,99,96,97],[97,100,96,98],[98,6,97,4],[98,7,97,5],[99,6,98,4,"contains"],[99,14,98,12],[99,16,98,14,"key"],[99,19,98,17],[99,23,98,21,"storage"],[99,30,98,28],[99,31,98,29],[99,32,98,30],[99,33,98,31,"getItem"],[99,40,98,38],[99,41,98,39,"prefixedKey"],[99,52,98,50],[99,53,98,51,"key"],[99,56,98,54],[99,57,98,55],[99,58,98,56],[99,62,98,60],[99,66,98,64],[100,6,99,4,"recrypt"],[100,13,99,11],[100,15,99,13,"recrypt"],[100,16,99,13],[100,21,99,19],[101,8,100,6],[101,14,100,12],[101,18,100,16,"Error"],[101,23,100,21],[101,24,100,22],[101,64,100,62],[101,65,100,63],[102,6,101,4],[102,7,101,5],[103,6,102,4,"size"],[103,10,102,8],[103,12,102,10],[103,13,102,11],[104,6,103,4,"isReadOnly"],[104,16,103,14],[104,18,103,16],[104,23,103,21],[105,6,104,4,"trim"],[105,10,104,8],[105,12,104,10,"trim"],[105,13,104,10],[105,18,104,16],[106,8,105,6],[107,6,105,6],[108,4,107,2],[108,5,107,3],[109,2,108,0],[109,3,108,1],[110,2,109,0,"exports"],[110,9,109,7],[110,10,109,8,"createMMKV"],[110,20,109,18],[110,23,109,21,"createMMKV"],[110,33,109,31],[111,0,109,32],[111,3]],"functionMap":{"names":["<global>","hasAccessToLocalStorage","createMMKV","storage","getItem","setItem","removeItem","clear","key","prefixedKey","clearAll","_delete","set","getString","getNumber","getBoolean","getBuffer","getAllKeys","keys.filter$argument_0","keys.filter.map$argument_0","contains","recrypt","trim"],"mappings":"AAA;gCCU;CDQ;mBEG;kBCY;iBCM,uCD;iBEC,+CF;oBGC,kCH;eIC,6BJ;aKE,uDL;GDQ;sBOM;GPK;cQE;KRO;YSC,6CT;SUC;KVE;eWC,uDX;eYC;KZI;gBaC;KbI;ecC;KdI;gBeC;yBCE,gCD,ME,kCF;KfC;ckBC,kDlB;amBC;KnBE;UoBG;KpBE;CFE"}},"type":"js/module"}]}