{"dependencies":[{"name":"../../../isSameWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"0XeqMMVsMSwZYyxfmVXrfrOIxs4=","exportNames":["*"]}},{"name":"../../../toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":44,"index":97}}],"key":"xzxuyChWYCRlT/YHMXSQYUfBQfQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.formatRelative = void 0;\n  var _isSameWeek = require(_dependencyMap[0], \"../../../isSameWeek.js\");\n  var _toDate = require(_dependencyMap[1], \"../../../toDate.js\");\n  // Adapted from the `ru` translation\n\n  const weekdays = [\"неделя\", \"понеделник\", \"вторник\", \"сряда\", \"четвъртък\", \"петък\", \"събота\"];\n  function lastWeek(day) {\n    const weekday = weekdays[day];\n    switch (day) {\n      case 0:\n      case 3:\n      case 6:\n        return \"'миналата \" + weekday + \" в' p\";\n      case 1:\n      case 2:\n      case 4:\n      case 5:\n        return \"'миналия \" + weekday + \" в' p\";\n    }\n  }\n  function thisWeek(day) {\n    const weekday = weekdays[day];\n    if (day === 2 /* Tue */) {\n      return \"'във \" + weekday + \" в' p\";\n    } else {\n      return \"'в \" + weekday + \" в' p\";\n    }\n  }\n  function nextWeek(day) {\n    const weekday = weekdays[day];\n    switch (day) {\n      case 0:\n      case 3:\n      case 6:\n        return \"'следващата \" + weekday + \" в' p\";\n      case 1:\n      case 2:\n      case 4:\n      case 5:\n        return \"'следващия \" + weekday + \" в' p\";\n    }\n  }\n  const lastWeekFormatToken = (dirtyDate, baseDate, options) => {\n    const date = (0, _toDate.toDate)(dirtyDate);\n    const day = date.getDay();\n    if ((0, _isSameWeek.isSameWeek)(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  };\n  const nextWeekFormatToken = (dirtyDate, baseDate, options) => {\n    const date = (0, _toDate.toDate)(dirtyDate);\n    const day = date.getDay();\n    if ((0, _isSameWeek.isSameWeek)(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  };\n  const formatRelativeLocale = {\n    lastWeek: lastWeekFormatToken,\n    yesterday: \"'вчера в' p\",\n    today: \"'днес в' p\",\n    tomorrow: \"'утре в' p\",\n    nextWeek: nextWeekFormatToken,\n    other: \"P\"\n  };\n  const formatRelative = (token, date, baseDate, options) => {\n    const format = formatRelativeLocale[token];\n    if (typeof format === \"function\") {\n      return format(date, baseDate, options);\n    }\n    return format;\n  };\n  exports.formatRelative = formatRelative;\n});","lineCount":81,"map":[[6,2,1,0],[6,6,1,0,"_isSameWeek"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,2,0],[7,6,2,0,"_toDate"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,4,0],[10,2,6,0],[10,8,6,6,"weekdays"],[10,16,6,14],[10,19,6,17],[10,20,7,2],[10,28,7,10],[10,30,8,2],[10,42,8,14],[10,44,9,2],[10,53,9,11],[10,55,10,2],[10,62,10,9],[10,64,11,2],[10,75,11,13],[10,77,12,2],[10,84,12,9],[10,86,13,2],[10,94,13,10],[10,95,14,1],[11,2,16,0],[11,11,16,9,"lastWeek"],[11,19,16,17,"lastWeek"],[11,20,16,18,"day"],[11,23,16,21],[11,25,16,23],[12,4,17,2],[12,10,17,8,"weekday"],[12,17,17,15],[12,20,17,18,"weekdays"],[12,28,17,26],[12,29,17,27,"day"],[12,32,17,30],[12,33,17,31],[13,4,19,2],[13,12,19,10,"day"],[13,15,19,13],[14,6,20,4],[14,11,20,9],[14,12,20,10],[15,6,21,4],[15,11,21,9],[15,12,21,10],[16,6,22,4],[16,11,22,9],[16,12,22,10],[17,8,23,6],[17,15,23,13],[17,27,23,25],[17,30,23,28,"weekday"],[17,37,23,35],[17,40,23,38],[17,47,23,45],[18,6,24,4],[18,11,24,9],[18,12,24,10],[19,6,25,4],[19,11,25,9],[19,12,25,10],[20,6,26,4],[20,11,26,9],[20,12,26,10],[21,6,27,4],[21,11,27,9],[21,12,27,10],[22,8,28,6],[22,15,28,13],[22,26,28,24],[22,29,28,27,"weekday"],[22,36,28,34],[22,39,28,37],[22,46,28,44],[23,4,29,2],[24,2,30,0],[25,2,32,0],[25,11,32,9,"thisWeek"],[25,19,32,17,"thisWeek"],[25,20,32,18,"day"],[25,23,32,21],[25,25,32,23],[26,4,33,2],[26,10,33,8,"weekday"],[26,17,33,15],[26,20,33,18,"weekdays"],[26,28,33,26],[26,29,33,27,"day"],[26,32,33,30],[26,33,33,31],[27,4,35,2],[27,8,35,6,"day"],[27,11,35,9],[27,16,35,14],[27,17,35,15],[27,18,35,16],[27,29,35,27],[28,6,36,4],[28,13,36,11],[28,20,36,18],[28,23,36,21,"weekday"],[28,30,36,28],[28,33,36,31],[28,40,36,38],[29,4,37,2],[29,5,37,3],[29,11,37,9],[30,6,38,4],[30,13,38,11],[30,18,38,16],[30,21,38,19,"weekday"],[30,28,38,26],[30,31,38,29],[30,38,38,36],[31,4,39,2],[32,2,40,0],[33,2,42,0],[33,11,42,9,"nextWeek"],[33,19,42,17,"nextWeek"],[33,20,42,18,"day"],[33,23,42,21],[33,25,42,23],[34,4,43,2],[34,10,43,8,"weekday"],[34,17,43,15],[34,20,43,18,"weekdays"],[34,28,43,26],[34,29,43,27,"day"],[34,32,43,30],[34,33,43,31],[35,4,45,2],[35,12,45,10,"day"],[35,15,45,13],[36,6,46,4],[36,11,46,9],[36,12,46,10],[37,6,47,4],[37,11,47,9],[37,12,47,10],[38,6,48,4],[38,11,48,9],[38,12,48,10],[39,8,49,6],[39,15,49,13],[39,29,49,27],[39,32,49,30,"weekday"],[39,39,49,37],[39,42,49,40],[39,49,49,47],[40,6,50,4],[40,11,50,9],[40,12,50,10],[41,6,51,4],[41,11,51,9],[41,12,51,10],[42,6,52,4],[42,11,52,9],[42,12,52,10],[43,6,53,4],[43,11,53,9],[43,12,53,10],[44,8,54,6],[44,15,54,13],[44,28,54,26],[44,31,54,29,"weekday"],[44,38,54,36],[44,41,54,39],[44,48,54,46],[45,4,55,2],[46,2,56,0],[47,2,58,0],[47,8,58,6,"lastWeekFormatToken"],[47,27,58,25],[47,30,58,28,"lastWeekFormatToken"],[47,31,58,29,"dirtyDate"],[47,40,58,38],[47,42,58,40,"baseDate"],[47,50,58,48],[47,52,58,50,"options"],[47,59,58,57],[47,64,58,62],[48,4,59,2],[48,10,59,8,"date"],[48,14,59,12],[48,17,59,15],[48,21,59,15,"toDate"],[48,35,59,21],[48,37,59,22,"dirtyDate"],[48,46,59,31],[48,47,59,32],[49,4,60,2],[49,10,60,8,"day"],[49,13,60,11],[49,16,60,14,"date"],[49,20,60,18],[49,21,60,19,"getDay"],[49,27,60,25],[49,28,60,26],[49,29,60,27],[50,4,61,2],[50,8,61,6],[50,12,61,6,"isSameWeek"],[50,34,61,16],[50,36,61,17,"date"],[50,40,61,21],[50,42,61,23,"baseDate"],[50,50,61,31],[50,52,61,33,"options"],[50,59,61,40],[50,60,61,41],[50,62,61,43],[51,6,62,4],[51,13,62,11,"thisWeek"],[51,21,62,19],[51,22,62,20,"day"],[51,25,62,23],[51,26,62,24],[52,4,63,2],[52,5,63,3],[52,11,63,9],[53,6,64,4],[53,13,64,11,"lastWeek"],[53,21,64,19],[53,22,64,20,"day"],[53,25,64,23],[53,26,64,24],[54,4,65,2],[55,2,66,0],[55,3,66,1],[56,2,68,0],[56,8,68,6,"nextWeekFormatToken"],[56,27,68,25],[56,30,68,28,"nextWeekFormatToken"],[56,31,68,29,"dirtyDate"],[56,40,68,38],[56,42,68,40,"baseDate"],[56,50,68,48],[56,52,68,50,"options"],[56,59,68,57],[56,64,68,62],[57,4,69,2],[57,10,69,8,"date"],[57,14,69,12],[57,17,69,15],[57,21,69,15,"toDate"],[57,35,69,21],[57,37,69,22,"dirtyDate"],[57,46,69,31],[57,47,69,32],[58,4,70,2],[58,10,70,8,"day"],[58,13,70,11],[58,16,70,14,"date"],[58,20,70,18],[58,21,70,19,"getDay"],[58,27,70,25],[58,28,70,26],[58,29,70,27],[59,4,71,2],[59,8,71,6],[59,12,71,6,"isSameWeek"],[59,34,71,16],[59,36,71,17,"date"],[59,40,71,21],[59,42,71,23,"baseDate"],[59,50,71,31],[59,52,71,33,"options"],[59,59,71,40],[59,60,71,41],[59,62,71,43],[60,6,72,4],[60,13,72,11,"thisWeek"],[60,21,72,19],[60,22,72,20,"day"],[60,25,72,23],[60,26,72,24],[61,4,73,2],[61,5,73,3],[61,11,73,9],[62,6,74,4],[62,13,74,11,"nextWeek"],[62,21,74,19],[62,22,74,20,"day"],[62,25,74,23],[62,26,74,24],[63,4,75,2],[64,2,76,0],[64,3,76,1],[65,2,78,0],[65,8,78,6,"formatRelativeLocale"],[65,28,78,26],[65,31,78,29],[66,4,79,2,"lastWeek"],[66,12,79,10],[66,14,79,12,"lastWeekFormatToken"],[66,33,79,31],[67,4,80,2,"yesterday"],[67,13,80,11],[67,15,80,13],[67,28,80,26],[68,4,81,2,"today"],[68,9,81,7],[68,11,81,9],[68,23,81,21],[69,4,82,2,"tomorrow"],[69,12,82,10],[69,14,82,12],[69,26,82,24],[70,4,83,2,"nextWeek"],[70,12,83,10],[70,14,83,12,"nextWeekFormatToken"],[70,33,83,31],[71,4,84,2,"other"],[71,9,84,7],[71,11,84,9],[72,2,85,0],[72,3,85,1],[73,2,87,7],[73,8,87,13,"formatRelative"],[73,22,87,27],[73,25,87,30,"formatRelative"],[73,26,87,31,"token"],[73,31,87,36],[73,33,87,38,"date"],[73,37,87,42],[73,39,87,44,"baseDate"],[73,47,87,52],[73,49,87,54,"options"],[73,56,87,61],[73,61,87,66],[74,4,88,2],[74,10,88,8,"format"],[74,16,88,14],[74,19,88,17,"formatRelativeLocale"],[74,39,88,37],[74,40,88,38,"token"],[74,45,88,43],[74,46,88,44],[75,4,90,2],[75,8,90,6],[75,15,90,13,"format"],[75,21,90,19],[75,26,90,24],[75,36,90,34],[75,38,90,36],[76,6,91,4],[76,13,91,11,"format"],[76,19,91,17],[76,20,91,18,"date"],[76,24,91,22],[76,26,91,24,"baseDate"],[76,34,91,32],[76,36,91,34,"options"],[76,43,91,41],[76,44,91,42],[77,4,92,2],[78,4,94,2],[78,11,94,9,"format"],[78,17,94,15],[79,2,95,0],[79,3,95,1],[80,2,95,2,"exports"],[80,9,95,2],[80,10,95,2,"formatRelative"],[80,24,95,2],[80,27,95,2,"formatRelative"],[80,41,95,2],[81,0,95,2],[81,3]],"functionMap":{"names":["<global>","lastWeek","thisWeek","nextWeek","lastWeekFormatToken","nextWeekFormatToken","formatRelative"],"mappings":"AAA;ACe;CDc;AEE;CFQ;AGE;CHc;4BIE;CJQ;4BKE;CLQ;8BMW;CNQ"}},"type":"js/module"}]}