{"dependencies":[{"name":"./createTextEncoder","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":42},"end":{"line":5,"column":56,"index":98}}],"key":"mkBd6apmx7z6ANzQK/t5BJ8Lhug=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* global localStorage */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMMKV = void 0;\n  var _createTextEncoder = require(_dependencyMap[0], \"./createTextEncoder\");\n  const canUseDOM = typeof window !== 'undefined' && window.document?.createElement != null;\n  const hasAccessToLocalStorage = () => {\n    try {\n      // throws ACCESS_DENIED error\n      window.localStorage;\n      return true;\n    } catch {\n      return false;\n    }\n  };\n  const KEY_WILDCARD = '\\\\';\n  const inMemoryStorage = new Map();\n  const createMMKV = config => {\n    if (config.encryptionKey != null) {\n      throw new Error(\"MMKV: 'encryptionKey' is not supported on Web!\");\n    }\n    if (config.path != null) {\n      throw new Error(\"MMKV: 'path' is not supported on Web!\");\n    }\n\n    // canUseDOM check prevents spam in Node server environments, such as Next.js server side props.\n    if (!hasAccessToLocalStorage() && canUseDOM) {\n      console.warn('MMKV: LocalStorage has been disabled. Your experience will be limited to in-memory storage!');\n    }\n    const storage = () => {\n      if (!canUseDOM) {\n        throw new Error('Tried to access storage on the server. Did you forget to call this in useEffect?');\n      }\n      if (!hasAccessToLocalStorage()) {\n        return {\n          getItem: key => inMemoryStorage.get(key) ?? null,\n          setItem: (key, value) => inMemoryStorage.set(key, value),\n          removeItem: key => inMemoryStorage.delete(key),\n          clear: () => inMemoryStorage.clear(),\n          length: inMemoryStorage.size,\n          key: index => Object.keys(inMemoryStorage).at(index) ?? null\n        };\n      }\n      const domStorage = global?.localStorage ?? window?.localStorage ?? localStorage;\n      if (domStorage == null) {\n        throw new Error(`Could not find 'localStorage' instance!`);\n      }\n      return domStorage;\n    };\n    const textEncoder = (0, _createTextEncoder.createTextEncoder)();\n    if (config.id.includes(KEY_WILDCARD)) {\n      throw new Error('MMKV: `id` cannot contain the backslash character (`\\\\`)!');\n    }\n    const keyPrefix = `${config.id}${KEY_WILDCARD}`; // mmkv.default\\\\\n    const prefixedKey = key => {\n      if (key.includes('\\\\')) {\n        throw new Error('MMKV: `key` cannot contain the backslash character (`\\\\`)!');\n      }\n      return `${keyPrefix}${key}`;\n    };\n    return {\n      clearAll: () => {\n        const keys = Object.keys(storage());\n        for (const key of keys) {\n          if (key.startsWith(keyPrefix)) {\n            storage().removeItem(key);\n          }\n        }\n      },\n      delete: key => storage().removeItem(prefixedKey(key)),\n      set: (key, value) => {\n        storage().setItem(prefixedKey(key), value.toString());\n      },\n      getString: key => storage().getItem(prefixedKey(key)) ?? undefined,\n      getNumber: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return Number(value);\n      },\n      getBoolean: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return value === 'true';\n      },\n      getBuffer: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return textEncoder.encode(value).buffer;\n      },\n      getAllKeys: () => {\n        const keys = Object.keys(storage());\n        return keys.filter(key => key.startsWith(keyPrefix)).map(key => key.slice(keyPrefix.length));\n      },\n      contains: key => storage().getItem(prefixedKey(key)) != null,\n      recrypt: () => {\n        throw new Error('`recrypt(..)` is not supported on Web!');\n      },\n      size: 0,\n      isReadOnly: false,\n      trim: () => {\n        // no-op\n      }\n    };\n  };\n  exports.createMMKV = createMMKV;\n});","lineCount":110,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,3,0,"exports"],[8,9,3,0],[8,10,3,0,"createMMKV"],[8,20,3,0],[9,2,5,0],[9,6,5,0,"_createTextEncoder"],[9,24,5,0],[9,27,5,0,"require"],[9,34,5,0],[9,35,5,0,"_dependencyMap"],[9,49,5,0],[10,2,6,0],[10,8,6,6,"canUseDOM"],[10,17,6,15],[10,20,6,18],[10,27,6,25,"window"],[10,33,6,31],[10,38,6,36],[10,49,6,47],[10,53,6,51,"window"],[10,59,6,57],[10,60,6,58,"document"],[10,68,6,66],[10,70,6,68,"createElement"],[10,83,6,81],[10,87,6,85],[10,91,6,89],[11,2,7,0],[11,8,7,6,"hasAccessToLocalStorage"],[11,31,7,29],[11,34,7,32,"hasAccessToLocalStorage"],[11,35,7,32],[11,40,7,38],[12,4,8,2],[12,8,8,6],[13,6,9,4],[14,6,10,4,"window"],[14,12,10,10],[14,13,10,11,"localStorage"],[14,25,10,23],[15,6,11,4],[15,13,11,11],[15,17,11,15],[16,4,12,2],[16,5,12,3],[16,6,12,4],[16,12,12,10],[17,6,13,4],[17,13,13,11],[17,18,13,16],[18,4,14,2],[19,2,15,0],[19,3,15,1],[20,2,16,0],[20,8,16,6,"KEY_WILDCARD"],[20,20,16,18],[20,23,16,21],[20,27,16,25],[21,2,17,0],[21,8,17,6,"inMemoryStorage"],[21,23,17,21],[21,26,17,24],[21,30,17,28,"Map"],[21,33,17,31],[21,34,17,32],[21,35,17,33],[22,2,18,7],[22,8,18,13,"createMMKV"],[22,18,18,23],[22,21,18,26,"config"],[22,27,18,32],[22,31,18,36],[23,4,19,2],[23,8,19,6,"config"],[23,14,19,12],[23,15,19,13,"encryptionKey"],[23,28,19,26],[23,32,19,30],[23,36,19,34],[23,38,19,36],[24,6,20,4],[24,12,20,10],[24,16,20,14,"Error"],[24,21,20,19],[24,22,20,20],[24,70,20,68],[24,71,20,69],[25,4,21,2],[26,4,22,2],[26,8,22,6,"config"],[26,14,22,12],[26,15,22,13,"path"],[26,19,22,17],[26,23,22,21],[26,27,22,25],[26,29,22,27],[27,6,23,4],[27,12,23,10],[27,16,23,14,"Error"],[27,21,23,19],[27,22,23,20],[27,61,23,59],[27,62,23,60],[28,4,24,2],[30,4,26,2],[31,4,27,2],[31,8,27,6],[31,9,27,7,"hasAccessToLocalStorage"],[31,32,27,30],[31,33,27,31],[31,34,27,32],[31,38,27,36,"canUseDOM"],[31,47,27,45],[31,49,27,47],[32,6,28,4,"console"],[32,13,28,11],[32,14,28,12,"warn"],[32,18,28,16],[32,19,28,17],[32,112,28,110],[32,113,28,111],[33,4,29,2],[34,4,30,2],[34,10,30,8,"storage"],[34,17,30,15],[34,20,30,18,"storage"],[34,21,30,18],[34,26,30,24],[35,6,31,4],[35,10,31,8],[35,11,31,9,"canUseDOM"],[35,20,31,18],[35,22,31,20],[36,8,32,6],[36,14,32,12],[36,18,32,16,"Error"],[36,23,32,21],[36,24,32,22],[36,106,32,104],[36,107,32,105],[37,6,33,4],[38,6,34,4],[38,10,34,8],[38,11,34,9,"hasAccessToLocalStorage"],[38,34,34,32],[38,35,34,33],[38,36,34,34],[38,38,34,36],[39,8,35,6],[39,15,35,13],[40,10,36,8,"getItem"],[40,17,36,15],[40,19,36,17,"key"],[40,22,36,20],[40,26,36,24,"inMemoryStorage"],[40,41,36,39],[40,42,36,40,"get"],[40,45,36,43],[40,46,36,44,"key"],[40,49,36,47],[40,50,36,48],[40,54,36,52],[40,58,36,56],[41,10,37,8,"setItem"],[41,17,37,15],[41,19,37,17,"setItem"],[41,20,37,18,"key"],[41,23,37,21],[41,25,37,23,"value"],[41,30,37,28],[41,35,37,33,"inMemoryStorage"],[41,50,37,48],[41,51,37,49,"set"],[41,54,37,52],[41,55,37,53,"key"],[41,58,37,56],[41,60,37,58,"value"],[41,65,37,63],[41,66,37,64],[42,10,38,8,"removeItem"],[42,20,38,18],[42,22,38,20,"key"],[42,25,38,23],[42,29,38,27,"inMemoryStorage"],[42,44,38,42],[42,45,38,43,"delete"],[42,51,38,49],[42,52,38,50,"key"],[42,55,38,53],[42,56,38,54],[43,10,39,8,"clear"],[43,15,39,13],[43,17,39,15,"clear"],[43,18,39,15],[43,23,39,21,"inMemoryStorage"],[43,38,39,36],[43,39,39,37,"clear"],[43,44,39,42],[43,45,39,43],[43,46,39,44],[44,10,40,8,"length"],[44,16,40,14],[44,18,40,16,"inMemoryStorage"],[44,33,40,31],[44,34,40,32,"size"],[44,38,40,36],[45,10,41,8,"key"],[45,13,41,11],[45,15,41,13,"index"],[45,20,41,18],[45,24,41,22,"Object"],[45,30,41,28],[45,31,41,29,"keys"],[45,35,41,33],[45,36,41,34,"inMemoryStorage"],[45,51,41,49],[45,52,41,50],[45,53,41,51,"at"],[45,55,41,53],[45,56,41,54,"index"],[45,61,41,59],[45,62,41,60],[45,66,41,64],[46,8,42,6],[46,9,42,7],[47,6,43,4],[48,6,44,4],[48,12,44,10,"domStorage"],[48,22,44,20],[48,25,44,23,"global"],[48,31,44,29],[48,33,44,31,"localStorage"],[48,45,44,43],[48,49,44,47,"window"],[48,55,44,53],[48,57,44,55,"localStorage"],[48,69,44,67],[48,73,44,71,"localStorage"],[48,85,44,83],[49,6,45,4],[49,10,45,8,"domStorage"],[49,20,45,18],[49,24,45,22],[49,28,45,26],[49,30,45,28],[50,8,46,6],[50,14,46,12],[50,18,46,16,"Error"],[50,23,46,21],[50,24,46,22],[50,65,46,63],[50,66,46,64],[51,6,47,4],[52,6,48,4],[52,13,48,11,"domStorage"],[52,23,48,21],[53,4,49,2],[53,5,49,3],[54,4,50,2],[54,10,50,8,"textEncoder"],[54,21,50,19],[54,24,50,22],[54,28,50,22,"createTextEncoder"],[54,64,50,39],[54,66,50,40],[54,67,50,41],[55,4,51,2],[55,8,51,6,"config"],[55,14,51,12],[55,15,51,13,"id"],[55,17,51,15],[55,18,51,16,"includes"],[55,26,51,24],[55,27,51,25,"KEY_WILDCARD"],[55,39,51,37],[55,40,51,38],[55,42,51,40],[56,6,52,4],[56,12,52,10],[56,16,52,14,"Error"],[56,21,52,19],[56,22,52,20],[56,81,52,79],[56,82,52,80],[57,4,53,2],[58,4,54,2],[58,10,54,8,"keyPrefix"],[58,19,54,17],[58,22,54,20],[58,25,54,23,"config"],[58,31,54,29],[58,32,54,30,"id"],[58,34,54,32],[58,37,54,35,"KEY_WILDCARD"],[58,49,54,47],[58,51,54,49],[58,52,54,50],[58,53,54,51],[59,4,55,2],[59,10,55,8,"prefixedKey"],[59,21,55,19],[59,24,55,22,"key"],[59,27,55,25],[59,31,55,29],[60,6,56,4],[60,10,56,8,"key"],[60,13,56,11],[60,14,56,12,"includes"],[60,22,56,20],[60,23,56,21],[60,27,56,25],[60,28,56,26],[60,30,56,28],[61,8,57,6],[61,14,57,12],[61,18,57,16,"Error"],[61,23,57,21],[61,24,57,22],[61,84,57,82],[61,85,57,83],[62,6,58,4],[63,6,59,4],[63,13,59,11],[63,16,59,14,"keyPrefix"],[63,25,59,23],[63,28,59,26,"key"],[63,31,59,29],[63,33,59,31],[64,4,60,2],[64,5,60,3],[65,4,61,2],[65,11,61,9],[66,6,62,4,"clearAll"],[66,14,62,12],[66,16,62,14,"clearAll"],[66,17,62,14],[66,22,62,20],[67,8,63,6],[67,14,63,12,"keys"],[67,18,63,16],[67,21,63,19,"Object"],[67,27,63,25],[67,28,63,26,"keys"],[67,32,63,30],[67,33,63,31,"storage"],[67,40,63,38],[67,41,63,39],[67,42,63,40],[67,43,63,41],[68,8,64,6],[68,13,64,11],[68,19,64,17,"key"],[68,22,64,20],[68,26,64,24,"keys"],[68,30,64,28],[68,32,64,30],[69,10,65,8],[69,14,65,12,"key"],[69,17,65,15],[69,18,65,16,"startsWith"],[69,28,65,26],[69,29,65,27,"keyPrefix"],[69,38,65,36],[69,39,65,37],[69,41,65,39],[70,12,66,10,"storage"],[70,19,66,17],[70,20,66,18],[70,21,66,19],[70,22,66,20,"removeItem"],[70,32,66,30],[70,33,66,31,"key"],[70,36,66,34],[70,37,66,35],[71,10,67,8],[72,8,68,6],[73,6,69,4],[73,7,69,5],[74,6,70,4,"delete"],[74,12,70,10],[74,14,70,12,"key"],[74,17,70,15],[74,21,70,19,"storage"],[74,28,70,26],[74,29,70,27],[74,30,70,28],[74,31,70,29,"removeItem"],[74,41,70,39],[74,42,70,40,"prefixedKey"],[74,53,70,51],[74,54,70,52,"key"],[74,57,70,55],[74,58,70,56],[74,59,70,57],[75,6,71,4,"set"],[75,9,71,7],[75,11,71,9,"set"],[75,12,71,10,"key"],[75,15,71,13],[75,17,71,15,"value"],[75,22,71,20],[75,27,71,25],[76,8,72,6,"storage"],[76,15,72,13],[76,16,72,14],[76,17,72,15],[76,18,72,16,"setItem"],[76,25,72,23],[76,26,72,24,"prefixedKey"],[76,37,72,35],[76,38,72,36,"key"],[76,41,72,39],[76,42,72,40],[76,44,72,42,"value"],[76,49,72,47],[76,50,72,48,"toString"],[76,58,72,56],[76,59,72,57],[76,60,72,58],[76,61,72,59],[77,6,73,4],[77,7,73,5],[78,6,74,4,"getString"],[78,15,74,13],[78,17,74,15,"key"],[78,20,74,18],[78,24,74,22,"storage"],[78,31,74,29],[78,32,74,30],[78,33,74,31],[78,34,74,32,"getItem"],[78,41,74,39],[78,42,74,40,"prefixedKey"],[78,53,74,51],[78,54,74,52,"key"],[78,57,74,55],[78,58,74,56],[78,59,74,57],[78,63,74,61,"undefined"],[78,72,74,70],[79,6,75,4,"getNumber"],[79,15,75,13],[79,17,75,15,"key"],[79,20,75,18],[79,24,75,22],[80,8,76,6],[80,14,76,12,"value"],[80,19,76,17],[80,22,76,20,"storage"],[80,29,76,27],[80,30,76,28],[80,31,76,29],[80,32,76,30,"getItem"],[80,39,76,37],[80,40,76,38,"prefixedKey"],[80,51,76,49],[80,52,76,50,"key"],[80,55,76,53],[80,56,76,54],[80,57,76,55],[81,8,77,6],[81,12,77,10,"value"],[81,17,77,15],[81,21,77,19],[81,25,77,23],[81,27,77,25],[81,34,77,32,"undefined"],[81,43,77,41],[82,8,78,6],[82,15,78,13,"Number"],[82,21,78,19],[82,22,78,20,"value"],[82,27,78,25],[82,28,78,26],[83,6,79,4],[83,7,79,5],[84,6,80,4,"getBoolean"],[84,16,80,14],[84,18,80,16,"key"],[84,21,80,19],[84,25,80,23],[85,8,81,6],[85,14,81,12,"value"],[85,19,81,17],[85,22,81,20,"storage"],[85,29,81,27],[85,30,81,28],[85,31,81,29],[85,32,81,30,"getItem"],[85,39,81,37],[85,40,81,38,"prefixedKey"],[85,51,81,49],[85,52,81,50,"key"],[85,55,81,53],[85,56,81,54],[85,57,81,55],[86,8,82,6],[86,12,82,10,"value"],[86,17,82,15],[86,21,82,19],[86,25,82,23],[86,27,82,25],[86,34,82,32,"undefined"],[86,43,82,41],[87,8,83,6],[87,15,83,13,"value"],[87,20,83,18],[87,25,83,23],[87,31,83,29],[88,6,84,4],[88,7,84,5],[89,6,85,4,"getBuffer"],[89,15,85,13],[89,17,85,15,"key"],[89,20,85,18],[89,24,85,22],[90,8,86,6],[90,14,86,12,"value"],[90,19,86,17],[90,22,86,20,"storage"],[90,29,86,27],[90,30,86,28],[90,31,86,29],[90,32,86,30,"getItem"],[90,39,86,37],[90,40,86,38,"prefixedKey"],[90,51,86,49],[90,52,86,50,"key"],[90,55,86,53],[90,56,86,54],[90,57,86,55],[91,8,87,6],[91,12,87,10,"value"],[91,17,87,15],[91,21,87,19],[91,25,87,23],[91,27,87,25],[91,34,87,32,"undefined"],[91,43,87,41],[92,8,88,6],[92,15,88,13,"textEncoder"],[92,26,88,24],[92,27,88,25,"encode"],[92,33,88,31],[92,34,88,32,"value"],[92,39,88,37],[92,40,88,38],[92,41,88,39,"buffer"],[92,47,88,45],[93,6,89,4],[93,7,89,5],[94,6,90,4,"getAllKeys"],[94,16,90,14],[94,18,90,16,"getAllKeys"],[94,19,90,16],[94,24,90,22],[95,8,91,6],[95,14,91,12,"keys"],[95,18,91,16],[95,21,91,19,"Object"],[95,27,91,25],[95,28,91,26,"keys"],[95,32,91,30],[95,33,91,31,"storage"],[95,40,91,38],[95,41,91,39],[95,42,91,40],[95,43,91,41],[96,8,92,6],[96,15,92,13,"keys"],[96,19,92,17],[96,20,92,18,"filter"],[96,26,92,24],[96,27,92,25,"key"],[96,30,92,28],[96,34,92,32,"key"],[96,37,92,35],[96,38,92,36,"startsWith"],[96,48,92,46],[96,49,92,47,"keyPrefix"],[96,58,92,56],[96,59,92,57],[96,60,92,58],[96,61,92,59,"map"],[96,64,92,62],[96,65,92,63,"key"],[96,68,92,66],[96,72,92,70,"key"],[96,75,92,73],[96,76,92,74,"slice"],[96,81,92,79],[96,82,92,80,"keyPrefix"],[96,91,92,89],[96,92,92,90,"length"],[96,98,92,96],[96,99,92,97],[96,100,92,98],[97,6,93,4],[97,7,93,5],[98,6,94,4,"contains"],[98,14,94,12],[98,16,94,14,"key"],[98,19,94,17],[98,23,94,21,"storage"],[98,30,94,28],[98,31,94,29],[98,32,94,30],[98,33,94,31,"getItem"],[98,40,94,38],[98,41,94,39,"prefixedKey"],[98,52,94,50],[98,53,94,51,"key"],[98,56,94,54],[98,57,94,55],[98,58,94,56],[98,62,94,60],[98,66,94,64],[99,6,95,4,"recrypt"],[99,13,95,11],[99,15,95,13,"recrypt"],[99,16,95,13],[99,21,95,19],[100,8,96,6],[100,14,96,12],[100,18,96,16,"Error"],[100,23,96,21],[100,24,96,22],[100,64,96,62],[100,65,96,63],[101,6,97,4],[101,7,97,5],[102,6,98,4,"size"],[102,10,98,8],[102,12,98,10],[102,13,98,11],[103,6,99,4,"isReadOnly"],[103,16,99,14],[103,18,99,16],[103,23,99,21],[104,6,100,4,"trim"],[104,10,100,8],[104,12,100,10,"trim"],[104,13,100,10],[104,18,100,16],[105,8,101,6],[106,6,101,6],[107,4,103,2],[107,5,103,3],[108,2,104,0],[108,3,104,1],[109,2,104,2,"exports"],[109,9,104,2],[109,10,104,2,"createMMKV"],[109,20,104,2],[109,23,104,2,"createMMKV"],[109,33,104,2],[110,0,104,2],[110,3]],"functionMap":{"names":["<global>","hasAccessToLocalStorage","createMMKV","storage","getItem","setItem","removeItem","clear","key","prefixedKey","clearAll","_delete","set","getString","getNumber","getBoolean","getBuffer","getAllKeys","keys.filter$argument_0","keys.filter.map$argument_0","contains","recrypt","trim"],"mappings":"AAA;gCCM;CDQ;0BEG;kBCY;iBCM,uCD;iBEC,+CF;oBGC,kCH;eIC,6BJ;aKE,uDL;GDQ;sBOM;GPK;cQE;KRO;YSC,6CT;SUC;KVE;eWC,uDX;eYC;KZI;gBaC;KbI;ecC;KdI;gBeC;yBCE,gCD,ME,kCF;KfC;ckBC,kDlB;amBC;KnBE;UoBG;KpBE;CFE"}},"type":"js/module"}]}