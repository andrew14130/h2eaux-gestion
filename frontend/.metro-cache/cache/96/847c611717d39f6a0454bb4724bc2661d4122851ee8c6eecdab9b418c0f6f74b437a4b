{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMockMMKV = void 0;\n  /* Mock MMKV instance for use in tests */\n  var createMockMMKV = () => {\n    var storage = new Map();\n    return {\n      clearAll: () => storage.clear(),\n      delete: key => storage.delete(key),\n      set: (key, value) => storage.set(key, value),\n      getString: key => {\n        var result = storage.get(key);\n        return typeof result === 'string' ? result : undefined;\n      },\n      getNumber: key => {\n        var result = storage.get(key);\n        return typeof result === 'number' ? result : undefined;\n      },\n      getBoolean: key => {\n        var result = storage.get(key);\n        return typeof result === 'boolean' ? result : undefined;\n      },\n      getBuffer: key => {\n        var result = storage.get(key);\n        return result instanceof ArrayBuffer ? result : undefined;\n      },\n      getAllKeys: () => Array.from(storage.keys()),\n      contains: key => storage.has(key),\n      recrypt: () => {\n        console.warn('Encryption is not supported in mocked MMKV instances!');\n      },\n      size: 0,\n      isReadOnly: false,\n      trim: () => {\n        // no-op\n      }\n    };\n  };\n  exports.createMockMMKV = createMockMMKV;\n});","lineCount":42,"map":[[6,2,3,0],[7,2,4,7],[7,6,4,13,"createMockMMKV"],[7,20,4,27],[7,23,4,30,"createMockMMKV"],[7,24,4,30],[7,29,4,48],[8,4,5,2],[8,8,5,8,"storage"],[8,15,5,15],[8,18,5,18],[8,22,5,22,"Map"],[8,25,5,25],[8,26,5,75],[8,27,5,76],[9,4,7,2],[9,11,7,9],[10,6,8,4,"clearAll"],[10,14,8,12],[10,16,8,14,"clearAll"],[10,17,8,14],[10,22,8,20,"storage"],[10,29,8,27],[10,30,8,28,"clear"],[10,35,8,33],[10,36,8,34],[10,37,8,35],[11,6,9,4,"delete"],[11,12,9,10],[11,14,9,13,"key"],[11,17,9,16],[11,21,9,21,"storage"],[11,28,9,28],[11,29,9,29,"delete"],[11,35,9,35],[11,36,9,36,"key"],[11,39,9,39],[11,40,9,40],[12,6,10,4,"set"],[12,9,10,7],[12,11,10,9,"set"],[12,12,10,10,"key"],[12,15,10,13],[12,17,10,15,"value"],[12,22,10,20],[12,27,10,25,"storage"],[12,34,10,32],[12,35,10,33,"set"],[12,38,10,36],[12,39,10,37,"key"],[12,42,10,40],[12,44,10,42,"value"],[12,49,10,47],[12,50,10,48],[13,6,11,4,"getString"],[13,15,11,13],[13,17,11,16,"key"],[13,20,11,19],[13,24,11,24],[14,8,12,6],[14,12,12,12,"result"],[14,18,12,18],[14,21,12,21,"storage"],[14,28,12,28],[14,29,12,29,"get"],[14,32,12,32],[14,33,12,33,"key"],[14,36,12,36],[14,37,12,37],[15,8,13,6],[15,15,13,13],[15,22,13,20,"result"],[15,28,13,26],[15,33,13,31],[15,41,13,39],[15,44,13,42,"result"],[15,50,13,48],[15,53,13,51,"undefined"],[15,62,13,60],[16,6,14,4],[16,7,14,5],[17,6,15,4,"getNumber"],[17,15,15,13],[17,17,15,16,"key"],[17,20,15,19],[17,24,15,24],[18,8,16,6],[18,12,16,12,"result"],[18,18,16,18],[18,21,16,21,"storage"],[18,28,16,28],[18,29,16,29,"get"],[18,32,16,32],[18,33,16,33,"key"],[18,36,16,36],[18,37,16,37],[19,8,17,6],[19,15,17,13],[19,22,17,20,"result"],[19,28,17,26],[19,33,17,31],[19,41,17,39],[19,44,17,42,"result"],[19,50,17,48],[19,53,17,51,"undefined"],[19,62,17,60],[20,6,18,4],[20,7,18,5],[21,6,19,4,"getBoolean"],[21,16,19,14],[21,18,19,17,"key"],[21,21,19,20],[21,25,19,25],[22,8,20,6],[22,12,20,12,"result"],[22,18,20,18],[22,21,20,21,"storage"],[22,28,20,28],[22,29,20,29,"get"],[22,32,20,32],[22,33,20,33,"key"],[22,36,20,36],[22,37,20,37],[23,8,21,6],[23,15,21,13],[23,22,21,20,"result"],[23,28,21,26],[23,33,21,31],[23,42,21,40],[23,45,21,43,"result"],[23,51,21,49],[23,54,21,52,"undefined"],[23,63,21,61],[24,6,22,4],[24,7,22,5],[25,6,23,4,"getBuffer"],[25,15,23,13],[25,17,23,16,"key"],[25,20,23,19],[25,24,23,24],[26,8,24,6],[26,12,24,12,"result"],[26,18,24,18],[26,21,24,21,"storage"],[26,28,24,28],[26,29,24,29,"get"],[26,32,24,32],[26,33,24,33,"key"],[26,36,24,36],[26,37,24,37],[27,8,25,6],[27,15,25,13,"result"],[27,21,25,19],[27,33,25,31,"ArrayBuffer"],[27,44,25,42],[27,47,25,45,"result"],[27,53,25,51],[27,56,25,54,"undefined"],[27,65,25,63],[28,6,26,4],[28,7,26,5],[29,6,27,4,"getAllKeys"],[29,16,27,14],[29,18,27,16,"getAllKeys"],[29,19,27,16],[29,24,27,22,"Array"],[29,29,27,27],[29,30,27,28,"from"],[29,34,27,32],[29,35,27,33,"storage"],[29,42,27,40],[29,43,27,41,"keys"],[29,47,27,45],[29,48,27,46],[29,49,27,47],[29,50,27,48],[30,6,28,4,"contains"],[30,14,28,12],[30,16,28,15,"key"],[30,19,28,18],[30,23,28,23,"storage"],[30,30,28,30],[30,31,28,31,"has"],[30,34,28,34],[30,35,28,35,"key"],[30,38,28,38],[30,39,28,39],[31,6,29,4,"recrypt"],[31,13,29,11],[31,15,29,13,"recrypt"],[31,16,29,13],[31,21,29,19],[32,8,30,6,"console"],[32,15,30,13],[32,16,30,14,"warn"],[32,20,30,18],[32,21,30,19],[32,76,30,74],[32,77,30,75],[33,6,31,4],[33,7,31,5],[34,6,32,4,"size"],[34,10,32,8],[34,12,32,10],[34,13,32,11],[35,6,33,4,"isReadOnly"],[35,16,33,14],[35,18,33,16],[35,23,33,21],[36,6,34,4,"trim"],[36,10,34,8],[36,12,34,10,"trim"],[36,13,34,10],[36,18,34,16],[37,8,35,6],[38,6,35,6],[39,4,37,2],[39,5,37,3],[40,2,38,0],[40,3,38,1],[41,2,38,2,"exports"],[41,9,38,2],[41,10,38,2,"createMockMMKV"],[41,24,38,2],[41,27,38,2,"createMockMMKV"],[41,41,38,2],[42,0,38,2],[42,3]],"functionMap":{"names":["<global>","createMockMMKV","clearAll","_delete","set","getString","getNumber","getBoolean","getBuffer","getAllKeys","contains","recrypt","trim"],"mappings":"AAA;8BCG;cCI,qBD;YEC,4BF;SGC,uCH;eIC;KJG;eKC;KLG;gBMC;KNG;eOC;KPG;gBQC,gCR;cSC,yBT;aUC;KVE;UWG;KXE;CDE"}},"type":"js/module"}]}