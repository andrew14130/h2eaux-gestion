{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./NativeMmkv","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":50,"index":91}}],"key":"0HzG4z8dra3sMoPLnS0tDKn3Yh0=","exportNames":["*"]}},{"name":"./Types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":92},"end":{"line":3,"column":68,"index":160}}],"key":"OKi9gXt1c9OHloZ63iRuMTx/XzM=","exportNames":["*"]}},{"name":"./NativeMmkvPlatformContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":80,"index":241}}],"key":"MKacI6MOQguPr7ADeY5ojairGZk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMMKV = void 0;\n  var _reactNative = require(_dependencyMap[0], \"react-native\");\n  var _NativeMmkv = require(_dependencyMap[1], \"./NativeMmkv\");\n  var _Types = require(_dependencyMap[2], \"./Types\");\n  var _NativeMmkvPlatformContext = require(_dependencyMap[3], \"./NativeMmkvPlatformContext\");\n  var createMMKV = config => {\n    var module = (0, _NativeMmkv.getMMKVTurboModule)();\n    if (_reactNative.Platform.OS === 'ios') {\n      if (config.path == null) {\n        try {\n          // If no `path` was supplied, we check if an `AppGroup` was set in Info.plist\n          var appGroupDirectory = (0, _NativeMmkvPlatformContext.getMMKVPlatformContextTurboModule)().getAppGroupDirectory();\n          if (appGroupDirectory != null) {\n            // If we have an `AppGroup` in Info.plist, use that as a path.\n            config.path = appGroupDirectory;\n          }\n        } catch (e) {\n          // We cannot throw errors here because it is a sync C++ TurboModule func. idk why.\n          console.error(e);\n        }\n      }\n    }\n    if (typeof config.mode === 'number') {\n      // Code-gen expects enums to be strings. In TS, they might be numbers tho.\n      // This sucks, so we need a workaround.\n      // @ts-expect-error the native side actually expects a string.\n      config.mode = _Types.Mode[config.mode];\n    }\n    var instance = module.createMMKV(config);\n    if (__DEV__) {\n      if (typeof instance !== 'object' || instance == null) {\n        throw new Error('Failed to create MMKV instance - an unknown object was returned by createMMKV(..)!');\n      }\n    }\n    return instance;\n  };\n  exports.createMMKV = createMMKV;\n});","lineCount":42,"map":[[6,2,1,0],[6,6,1,0,"_reactNative"],[6,18,1,0],[6,21,1,0,"require"],[6,28,1,0],[6,29,1,0,"_dependencyMap"],[6,43,1,0],[7,2,2,0],[7,6,2,0,"_NativeMmkv"],[7,17,2,0],[7,20,2,0,"require"],[7,27,2,0],[7,28,2,0,"_dependencyMap"],[7,42,2,0],[8,2,3,0],[8,6,3,0,"_Types"],[8,12,3,0],[8,15,3,0,"require"],[8,22,3,0],[8,23,3,0,"_dependencyMap"],[8,37,3,0],[9,2,4,0],[9,6,4,0,"_NativeMmkvPlatformContext"],[9,32,4,0],[9,35,4,0,"require"],[9,42,4,0],[9,43,4,0,"_dependencyMap"],[9,57,4,0],[10,2,6,7],[10,6,6,13,"createMMKV"],[10,16,6,23],[10,19,6,27,"config"],[10,25,6,48],[10,29,6,65],[11,4,7,2],[11,8,7,8,"module"],[11,14,7,14],[11,17,7,17],[11,21,7,17,"getMMKVTurboModule"],[11,51,7,35],[11,53,7,36],[11,54,7,37],[12,4,9,2],[12,8,9,6,"Platform"],[12,29,9,14],[12,30,9,15,"OS"],[12,32,9,17],[12,37,9,22],[12,42,9,27],[12,44,9,29],[13,6,10,4],[13,10,10,8,"config"],[13,16,10,14],[13,17,10,15,"path"],[13,21,10,19],[13,25,10,23],[13,29,10,27],[13,31,10,29],[14,8,11,6],[14,12,11,10],[15,10,12,8],[16,10,13,8],[16,14,13,14,"appGroupDirectory"],[16,31,13,31],[16,34,14,10],[16,38,14,10,"getMMKVPlatformContextTurboModule"],[16,98,14,43],[16,100,14,44],[16,101,14,45],[16,102,14,46,"getAppGroupDirectory"],[16,122,14,66],[16,123,14,67],[16,124,14,68],[17,10,15,8],[17,14,15,12,"appGroupDirectory"],[17,31,15,29],[17,35,15,33],[17,39,15,37],[17,41,15,39],[18,12,16,10],[19,12,17,10,"config"],[19,18,17,16],[19,19,17,17,"path"],[19,23,17,21],[19,26,17,24,"appGroupDirectory"],[19,43,17,41],[20,10,18,8],[21,8,19,6],[21,9,19,7],[21,10,19,8],[21,17,19,15,"e"],[21,18,19,16],[21,20,19,18],[22,10,20,8],[23,10,21,8,"console"],[23,17,21,15],[23,18,21,16,"error"],[23,23,21,21],[23,24,21,22,"e"],[23,25,21,23],[23,26,21,24],[24,8,22,6],[25,6,23,4],[26,4,24,2],[27,4,26,2],[27,8,26,6],[27,15,26,13,"config"],[27,21,26,19],[27,22,26,20,"mode"],[27,26,26,24],[27,31,26,29],[27,39,26,37],[27,41,26,39],[28,6,27,4],[29,6,28,4],[30,6,29,4],[31,6,30,4,"config"],[31,12,30,10],[31,13,30,11,"mode"],[31,17,30,15],[31,20,30,18,"Mode"],[31,31,30,22],[31,32,30,23,"config"],[31,38,30,29],[31,39,30,30,"mode"],[31,43,30,34],[31,44,30,35],[32,4,31,2],[33,4,33,2],[33,8,33,8,"instance"],[33,16,33,16],[33,19,33,19,"module"],[33,25,33,25],[33,26,33,26,"createMMKV"],[33,36,33,36],[33,37,33,37,"config"],[33,43,33,43],[33,44,33,44],[34,4,34,2],[34,8,34,6,"__DEV__"],[34,15,34,13],[34,17,34,15],[35,6,35,4],[35,10,35,8],[35,17,35,15,"instance"],[35,25,35,23],[35,30,35,28],[35,38,35,36],[35,42,35,40,"instance"],[35,50,35,48],[35,54,35,52],[35,58,35,56],[35,60,35,58],[36,8,36,6],[36,14,36,12],[36,18,36,16,"Error"],[36,23,36,21],[36,24,37,8],[36,108,38,6],[36,109,38,7],[37,6,39,4],[38,4,40,2],[39,4,41,2],[39,11,41,9,"instance"],[39,19,41,17],[40,2,42,0],[40,3,42,1],[41,2,42,2,"exports"],[41,9,42,2],[41,10,42,2,"createMMKV"],[41,20,42,2],[41,23,42,2,"createMMKV"],[41,33,42,2],[42,0,42,2],[42,3]],"functionMap":{"names":["<global>","createMMKV"],"mappings":"AAA;0BCK;CDoC"}},"type":"js/module"}]}