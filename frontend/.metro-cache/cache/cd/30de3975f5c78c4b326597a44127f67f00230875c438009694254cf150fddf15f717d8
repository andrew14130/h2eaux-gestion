{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMockMMKV = void 0;\n  /* Mock MMKV instance for use in tests */\n  const createMockMMKV = () => {\n    const storage = new Map();\n    return {\n      clearAll: () => storage.clear(),\n      delete: key => storage.delete(key),\n      set: (key, value) => storage.set(key, value),\n      getString: key => {\n        const result = storage.get(key);\n        return typeof result === 'string' ? result : undefined;\n      },\n      getNumber: key => {\n        const result = storage.get(key);\n        return typeof result === 'number' ? result : undefined;\n      },\n      getBoolean: key => {\n        const result = storage.get(key);\n        return typeof result === 'boolean' ? result : undefined;\n      },\n      getBuffer: key => {\n        const result = storage.get(key);\n        return result instanceof ArrayBuffer ? result : undefined;\n      },\n      getAllKeys: () => Array.from(storage.keys()),\n      contains: key => storage.has(key),\n      recrypt: () => {\n        console.warn('Encryption is not supported in mocked MMKV instances!');\n      },\n      size: 0,\n      isReadOnly: false,\n      trim: () => {\n        // no-op\n      }\n    };\n  };\n  exports.createMockMMKV = createMockMMKV;\n});","lineCount":44,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"createMockMMKV"],[7,24,6,22],[7,27,6,25],[7,32,6,30],[7,33,6,31],[8,2,7,0],[9,2,8,0],[9,8,8,6,"createMockMMKV"],[9,22,8,20],[9,25,8,23,"createMockMMKV"],[9,26,8,23],[9,31,8,29],[10,4,9,2],[10,10,9,8,"storage"],[10,17,9,15],[10,20,9,18],[10,24,9,22,"Map"],[10,27,9,25],[10,28,9,26],[10,29,9,27],[11,4,10,2],[11,11,10,9],[12,6,11,4,"clearAll"],[12,14,11,12],[12,16,11,14,"clearAll"],[12,17,11,14],[12,22,11,20,"storage"],[12,29,11,27],[12,30,11,28,"clear"],[12,35,11,33],[12,36,11,34],[12,37,11,35],[13,6,12,4,"delete"],[13,12,12,10],[13,14,12,12,"key"],[13,17,12,15],[13,21,12,19,"storage"],[13,28,12,26],[13,29,12,27,"delete"],[13,35,12,33],[13,36,12,34,"key"],[13,39,12,37],[13,40,12,38],[14,6,13,4,"set"],[14,9,13,7],[14,11,13,9,"set"],[14,12,13,10,"key"],[14,15,13,13],[14,17,13,15,"value"],[14,22,13,20],[14,27,13,25,"storage"],[14,34,13,32],[14,35,13,33,"set"],[14,38,13,36],[14,39,13,37,"key"],[14,42,13,40],[14,44,13,42,"value"],[14,49,13,47],[14,50,13,48],[15,6,14,4,"getString"],[15,15,14,13],[15,17,14,15,"key"],[15,20,14,18],[15,24,14,22],[16,8,15,6],[16,14,15,12,"result"],[16,20,15,18],[16,23,15,21,"storage"],[16,30,15,28],[16,31,15,29,"get"],[16,34,15,32],[16,35,15,33,"key"],[16,38,15,36],[16,39,15,37],[17,8,16,6],[17,15,16,13],[17,22,16,20,"result"],[17,28,16,26],[17,33,16,31],[17,41,16,39],[17,44,16,42,"result"],[17,50,16,48],[17,53,16,51,"undefined"],[17,62,16,60],[18,6,17,4],[18,7,17,5],[19,6,18,4,"getNumber"],[19,15,18,13],[19,17,18,15,"key"],[19,20,18,18],[19,24,18,22],[20,8,19,6],[20,14,19,12,"result"],[20,20,19,18],[20,23,19,21,"storage"],[20,30,19,28],[20,31,19,29,"get"],[20,34,19,32],[20,35,19,33,"key"],[20,38,19,36],[20,39,19,37],[21,8,20,6],[21,15,20,13],[21,22,20,20,"result"],[21,28,20,26],[21,33,20,31],[21,41,20,39],[21,44,20,42,"result"],[21,50,20,48],[21,53,20,51,"undefined"],[21,62,20,60],[22,6,21,4],[22,7,21,5],[23,6,22,4,"getBoolean"],[23,16,22,14],[23,18,22,16,"key"],[23,21,22,19],[23,25,22,23],[24,8,23,6],[24,14,23,12,"result"],[24,20,23,18],[24,23,23,21,"storage"],[24,30,23,28],[24,31,23,29,"get"],[24,34,23,32],[24,35,23,33,"key"],[24,38,23,36],[24,39,23,37],[25,8,24,6],[25,15,24,13],[25,22,24,20,"result"],[25,28,24,26],[25,33,24,31],[25,42,24,40],[25,45,24,43,"result"],[25,51,24,49],[25,54,24,52,"undefined"],[25,63,24,61],[26,6,25,4],[26,7,25,5],[27,6,26,4,"getBuffer"],[27,15,26,13],[27,17,26,15,"key"],[27,20,26,18],[27,24,26,22],[28,8,27,6],[28,14,27,12,"result"],[28,20,27,18],[28,23,27,21,"storage"],[28,30,27,28],[28,31,27,29,"get"],[28,34,27,32],[28,35,27,33,"key"],[28,38,27,36],[28,39,27,37],[29,8,28,6],[29,15,28,13,"result"],[29,21,28,19],[29,33,28,31,"ArrayBuffer"],[29,44,28,42],[29,47,28,45,"result"],[29,53,28,51],[29,56,28,54,"undefined"],[29,65,28,63],[30,6,29,4],[30,7,29,5],[31,6,30,4,"getAllKeys"],[31,16,30,14],[31,18,30,16,"getAllKeys"],[31,19,30,16],[31,24,30,22,"Array"],[31,29,30,27],[31,30,30,28,"from"],[31,34,30,32],[31,35,30,33,"storage"],[31,42,30,40],[31,43,30,41,"keys"],[31,47,30,45],[31,48,30,46],[31,49,30,47],[31,50,30,48],[32,6,31,4,"contains"],[32,14,31,12],[32,16,31,14,"key"],[32,19,31,17],[32,23,31,21,"storage"],[32,30,31,28],[32,31,31,29,"has"],[32,34,31,32],[32,35,31,33,"key"],[32,38,31,36],[32,39,31,37],[33,6,32,4,"recrypt"],[33,13,32,11],[33,15,32,13,"recrypt"],[33,16,32,13],[33,21,32,19],[34,8,33,6,"console"],[34,15,33,13],[34,16,33,14,"warn"],[34,20,33,18],[34,21,33,19],[34,76,33,74],[34,77,33,75],[35,6,34,4],[35,7,34,5],[36,6,35,4,"size"],[36,10,35,8],[36,12,35,10],[36,13,35,11],[37,6,36,4,"isReadOnly"],[37,16,36,14],[37,18,36,16],[37,23,36,21],[38,6,37,4,"trim"],[38,10,37,8],[38,12,37,10,"trim"],[38,13,37,10],[38,18,37,16],[39,8,38,6],[40,6,38,6],[41,4,40,2],[41,5,40,3],[42,2,41,0],[42,3,41,1],[43,2,42,0,"exports"],[43,9,42,7],[43,10,42,8,"createMockMMKV"],[43,24,42,22],[43,27,42,25,"createMockMMKV"],[43,41,42,39],[44,0,42,40],[44,3]],"functionMap":{"names":["<global>","createMockMMKV","clearAll","_delete","set","getString","getNumber","getBoolean","getBuffer","getAllKeys","contains","recrypt","trim"],"mappings":"AAA;uBCO;cCG,qBD;YEC,0BF;SGC,uCH;eIC;KJG;eKC;KLG;gBMC;KNG;eOC;KPG;gBQC,gCR;cSC,uBT;aUC;KVE;UWG;KXE;CDE"}},"type":"js/module"}]}