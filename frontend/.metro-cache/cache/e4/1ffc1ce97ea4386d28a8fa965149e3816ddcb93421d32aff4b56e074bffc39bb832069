{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.formatDistance = void 0;\n  const formatDistanceLocale = {\n    lessThanXSeconds: {\n      one: \"moins d’une seconde\",\n      other: \"moins de {{count}} secondes\"\n    },\n    xSeconds: {\n      one: \"1 seconde\",\n      other: \"{{count}} secondes\"\n    },\n    halfAMinute: \"30 secondes\",\n    lessThanXMinutes: {\n      one: \"moins d’une minute\",\n      other: \"moins de {{count}} minutes\"\n    },\n    xMinutes: {\n      one: \"1 minute\",\n      other: \"{{count}} minutes\"\n    },\n    aboutXHours: {\n      one: \"environ 1 heure\",\n      other: \"environ {{count}} heures\"\n    },\n    xHours: {\n      one: \"1 heure\",\n      other: \"{{count}} heures\"\n    },\n    xDays: {\n      one: \"1 jour\",\n      other: \"{{count}} jours\"\n    },\n    aboutXWeeks: {\n      one: \"environ 1 semaine\",\n      other: \"environ {{count}} semaines\"\n    },\n    xWeeks: {\n      one: \"1 semaine\",\n      other: \"{{count}} semaines\"\n    },\n    aboutXMonths: {\n      one: \"environ 1 mois\",\n      other: \"environ {{count}} mois\"\n    },\n    xMonths: {\n      one: \"1 mois\",\n      other: \"{{count}} mois\"\n    },\n    aboutXYears: {\n      one: \"environ 1 an\",\n      other: \"environ {{count}} ans\"\n    },\n    xYears: {\n      one: \"1 an\",\n      other: \"{{count}} ans\"\n    },\n    overXYears: {\n      one: \"plus d’un an\",\n      other: \"plus de {{count}} ans\"\n    },\n    almostXYears: {\n      one: \"presqu’un an\",\n      other: \"presque {{count}} ans\"\n    }\n  };\n  const formatDistance = (token, count, options) => {\n    let result;\n    const form = formatDistanceLocale[token];\n    if (typeof form === \"string\") {\n      result = form;\n    } else if (count === 1) {\n      result = form.one;\n    } else {\n      result = form.other.replace(\"{{count}}\", String(count));\n    }\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return \"dans \" + result;\n      } else {\n        return \"il y a \" + result;\n      }\n    }\n    return result;\n  };\n  exports.formatDistance = formatDistance;\n});","lineCount":89,"map":[[6,2,1,0],[6,8,1,6,"formatDistanceLocale"],[6,28,1,26],[6,31,1,29],[7,4,2,2,"lessThanXSeconds"],[7,20,2,18],[7,22,2,20],[8,6,3,4,"one"],[8,9,3,7],[8,11,3,9],[8,32,3,30],[9,6,4,4,"other"],[9,11,4,9],[9,13,4,11],[10,4,5,2],[10,5,5,3],[11,4,7,2,"xSeconds"],[11,12,7,10],[11,14,7,12],[12,6,8,4,"one"],[12,9,8,7],[12,11,8,9],[12,22,8,20],[13,6,9,4,"other"],[13,11,9,9],[13,13,9,11],[14,4,10,2],[14,5,10,3],[15,4,12,2,"halfAMinute"],[15,15,12,13],[15,17,12,15],[15,30,12,28],[16,4,14,2,"lessThanXMinutes"],[16,20,14,18],[16,22,14,20],[17,6,15,4,"one"],[17,9,15,7],[17,11,15,9],[17,31,15,29],[18,6,16,4,"other"],[18,11,16,9],[18,13,16,11],[19,4,17,2],[19,5,17,3],[20,4,19,2,"xMinutes"],[20,12,19,10],[20,14,19,12],[21,6,20,4,"one"],[21,9,20,7],[21,11,20,9],[21,21,20,19],[22,6,21,4,"other"],[22,11,21,9],[22,13,21,11],[23,4,22,2],[23,5,22,3],[24,4,24,2,"aboutXHours"],[24,15,24,13],[24,17,24,15],[25,6,25,4,"one"],[25,9,25,7],[25,11,25,9],[25,28,25,26],[26,6,26,4,"other"],[26,11,26,9],[26,13,26,11],[27,4,27,2],[27,5,27,3],[28,4,29,2,"xHours"],[28,10,29,8],[28,12,29,10],[29,6,30,4,"one"],[29,9,30,7],[29,11,30,9],[29,20,30,18],[30,6,31,4,"other"],[30,11,31,9],[30,13,31,11],[31,4,32,2],[31,5,32,3],[32,4,34,2,"xDays"],[32,9,34,7],[32,11,34,9],[33,6,35,4,"one"],[33,9,35,7],[33,11,35,9],[33,19,35,17],[34,6,36,4,"other"],[34,11,36,9],[34,13,36,11],[35,4,37,2],[35,5,37,3],[36,4,39,2,"aboutXWeeks"],[36,15,39,13],[36,17,39,15],[37,6,40,4,"one"],[37,9,40,7],[37,11,40,9],[37,30,40,28],[38,6,41,4,"other"],[38,11,41,9],[38,13,41,11],[39,4,42,2],[39,5,42,3],[40,4,44,2,"xWeeks"],[40,10,44,8],[40,12,44,10],[41,6,45,4,"one"],[41,9,45,7],[41,11,45,9],[41,22,45,20],[42,6,46,4,"other"],[42,11,46,9],[42,13,46,11],[43,4,47,2],[43,5,47,3],[44,4,49,2,"aboutXMonths"],[44,16,49,14],[44,18,49,16],[45,6,50,4,"one"],[45,9,50,7],[45,11,50,9],[45,27,50,25],[46,6,51,4,"other"],[46,11,51,9],[46,13,51,11],[47,4,52,2],[47,5,52,3],[48,4,54,2,"xMonths"],[48,11,54,9],[48,13,54,11],[49,6,55,4,"one"],[49,9,55,7],[49,11,55,9],[49,19,55,17],[50,6,56,4,"other"],[50,11,56,9],[50,13,56,11],[51,4,57,2],[51,5,57,3],[52,4,59,2,"aboutXYears"],[52,15,59,13],[52,17,59,15],[53,6,60,4,"one"],[53,9,60,7],[53,11,60,9],[53,25,60,23],[54,6,61,4,"other"],[54,11,61,9],[54,13,61,11],[55,4,62,2],[55,5,62,3],[56,4,64,2,"xYears"],[56,10,64,8],[56,12,64,10],[57,6,65,4,"one"],[57,9,65,7],[57,11,65,9],[57,17,65,15],[58,6,66,4,"other"],[58,11,66,9],[58,13,66,11],[59,4,67,2],[59,5,67,3],[60,4,69,2,"overXYears"],[60,14,69,12],[60,16,69,14],[61,6,70,4,"one"],[61,9,70,7],[61,11,70,9],[61,25,70,23],[62,6,71,4,"other"],[62,11,71,9],[62,13,71,11],[63,4,72,2],[63,5,72,3],[64,4,74,2,"almostXYears"],[64,16,74,14],[64,18,74,16],[65,6,75,4,"one"],[65,9,75,7],[65,11,75,9],[65,25,75,23],[66,6,76,4,"other"],[66,11,76,9],[66,13,76,11],[67,4,77,2],[68,2,78,0],[68,3,78,1],[69,2,80,7],[69,8,80,13,"formatDistance"],[69,22,80,27],[69,25,80,30,"formatDistance"],[69,26,80,31,"token"],[69,31,80,36],[69,33,80,38,"count"],[69,38,80,43],[69,40,80,45,"options"],[69,47,80,52],[69,52,80,57],[70,4,81,2],[70,8,81,6,"result"],[70,14,81,12],[71,4,82,2],[71,10,82,8,"form"],[71,14,82,12],[71,17,82,15,"formatDistanceLocale"],[71,37,82,35],[71,38,82,36,"token"],[71,43,82,41],[71,44,82,42],[72,4,83,2],[72,8,83,6],[72,15,83,13,"form"],[72,19,83,17],[72,24,83,22],[72,32,83,30],[72,34,83,32],[73,6,84,4,"result"],[73,12,84,10],[73,15,84,13,"form"],[73,19,84,17],[74,4,85,2],[74,5,85,3],[74,11,85,9],[74,15,85,13,"count"],[74,20,85,18],[74,25,85,23],[74,26,85,24],[74,28,85,26],[75,6,86,4,"result"],[75,12,86,10],[75,15,86,13,"form"],[75,19,86,17],[75,20,86,18,"one"],[75,23,86,21],[76,4,87,2],[76,5,87,3],[76,11,87,9],[77,6,88,4,"result"],[77,12,88,10],[77,15,88,13,"form"],[77,19,88,17],[77,20,88,18,"other"],[77,25,88,23],[77,26,88,24,"replace"],[77,33,88,31],[77,34,88,32],[77,45,88,43],[77,47,88,45,"String"],[77,53,88,51],[77,54,88,52,"count"],[77,59,88,57],[77,60,88,58],[77,61,88,59],[78,4,89,2],[79,4,91,2],[79,8,91,6,"options"],[79,15,91,13],[79,17,91,15,"addSuffix"],[79,26,91,24],[79,28,91,26],[80,6,92,4],[80,10,92,8,"options"],[80,17,92,15],[80,18,92,16,"comparison"],[80,28,92,26],[80,32,92,30,"options"],[80,39,92,37],[80,40,92,38,"comparison"],[80,50,92,48],[80,53,92,51],[80,54,92,52],[80,56,92,54],[81,8,93,6],[81,15,93,13],[81,22,93,20],[81,25,93,23,"result"],[81,31,93,29],[82,6,94,4],[82,7,94,5],[82,13,94,11],[83,8,95,6],[83,15,95,13],[83,24,95,22],[83,27,95,25,"result"],[83,33,95,31],[84,6,96,4],[85,4,97,2],[86,4,99,2],[86,11,99,9,"result"],[86,17,99,15],[87,2,100,0],[87,3,100,1],[88,2,100,2,"exports"],[88,9,100,2],[88,10,100,2,"formatDistance"],[88,24,100,2],[88,27,100,2,"formatDistance"],[88,41,100,2],[89,0,100,2],[89,3]],"functionMap":{"names":["<global>","formatDistance"],"mappings":"AAA;8BC+E;CDoB"}},"type":"js/module"}]}