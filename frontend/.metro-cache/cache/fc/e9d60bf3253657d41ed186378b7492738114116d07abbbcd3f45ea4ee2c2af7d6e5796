{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":74,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./MMKV","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":90},"end":{"line":4,"column":30,"index":120}}],"key":"zsqLD+ndfCbLd9bUBNNVv1kLmhE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useMMKV = useMMKV;\n  exports.useMMKVBuffer = exports.useMMKVBoolean = void 0;\n  exports.useMMKVListener = useMMKVListener;\n  exports.useMMKVNumber = void 0;\n  exports.useMMKVObject = useMMKVObject;\n  exports.useMMKVString = void 0;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _MMKV = require(_dependencyMap[1], \"./MMKV\");\n  function isConfigurationEqual(left, right) {\n    if (left == null || right == null) return left == null && right == null;\n    return left.encryptionKey === right.encryptionKey && left.id === right.id && left.path === right.path && left.mode === right.mode;\n  }\n  let defaultInstance = null;\n  function getDefaultInstance() {\n    if (defaultInstance == null) {\n      defaultInstance = new _MMKV.MMKV();\n    }\n    return defaultInstance;\n  }\n\n  /**\n   * Use the default, shared MMKV instance.\n   */\n\n  /**\n   * Use a custom MMKV instance with the given configuration.\n   * @param configuration The configuration to initialize the MMKV instance with. Does not have to be memoized.\n   */\n\n  function useMMKV(configuration) {\n    const instance = (0, _react.useRef)();\n    const lastConfiguration = (0, _react.useRef)();\n    if (configuration == null) return getDefaultInstance();\n    if (instance.current == null || !isConfigurationEqual(lastConfiguration.current, configuration)) {\n      lastConfiguration.current = configuration;\n      instance.current = new _MMKV.MMKV(configuration);\n    }\n    return instance.current;\n  }\n  function createMMKVHook(getter) {\n    return (key, instance) => {\n      const mmkv = instance ?? getDefaultInstance();\n      const [bump, setBump] = (0, _react.useState)(0);\n      const value = (0, _react.useMemo)(() => {\n        // bump is here as an additional outside dependency, so this useMemo\n        // re-computes the value each time bump changes, effectively acting as a hint\n        // that the outside value (storage) has changed. setting bump refreshes this value.\n        bump;\n        return getter(mmkv, key);\n      }, [mmkv, key, bump]);\n\n      // update value by user set\n      const set = (0, _react.useCallback)(v => {\n        const newValue = typeof v === 'function' ? v(getter(mmkv, key)) : v;\n        switch (typeof newValue) {\n          case 'number':\n          case 'string':\n          case 'boolean':\n            mmkv.set(key, newValue);\n            break;\n          case 'undefined':\n            mmkv.delete(key);\n            break;\n          case 'object':\n            if (newValue instanceof ArrayBuffer) {\n              mmkv.set(key, newValue);\n              break;\n            } else {\n              throw new Error(`MMKV: Type object (${newValue}) is not supported!`);\n            }\n          default:\n            throw new Error(`MMKV: Type ${typeof newValue} is not supported!`);\n        }\n      }, [key, mmkv]);\n\n      // update value if it changes somewhere else (second hook, same key)\n      (0, _react.useEffect)(() => {\n        const listener = mmkv.addOnValueChangedListener(changedKey => {\n          if (changedKey === key) {\n            setBump(b => b + 1);\n          }\n        });\n        return () => listener.remove();\n      }, [key, mmkv]);\n      return [value, set];\n    };\n  }\n\n  /**\n   * Use the string value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [username, setUsername] = useMMKVString(\"user.name\")\n   * ```\n   */\n  const useMMKVString = exports.useMMKVString = createMMKVHook((instance, key) => instance.getString(key));\n\n  /**\n   * Use the number value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [age, setAge] = useMMKVNumber(\"user.age\")\n   * ```\n   */\n  const useMMKVNumber = exports.useMMKVNumber = createMMKVHook((instance, key) => instance.getNumber(key));\n  /**\n   * Use the boolean value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [isPremiumAccount, setIsPremiumAccount] = useMMKVBoolean(\"user.isPremium\")\n   * ```\n   */\n  const useMMKVBoolean = exports.useMMKVBoolean = createMMKVHook((instance, key) => instance.getBoolean(key));\n  /**\n   * Use the buffer value (unsigned 8-bit (0-255)) of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [privateKey, setPrivateKey] = useMMKVBuffer(\"user.privateKey\")\n   * ```\n   */\n  const useMMKVBuffer = exports.useMMKVBuffer = createMMKVHook((instance, key) => instance.getBuffer(key));\n  /**\n   * Use an object value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * The object will be serialized using `JSON`.\n   *\n   * @example\n   * ```ts\n   * const [user, setUser] = useMMKVObject<User>(\"user\")\n   * ```\n   */\n  function useMMKVObject(key, instance) {\n    const [json, setJson] = useMMKVString(key, instance);\n    const value = (0, _react.useMemo)(() => {\n      if (json == null) return undefined;\n      return JSON.parse(json);\n    }, [json]);\n    const setValue = (0, _react.useCallback)(v => {\n      if (v instanceof Function) {\n        setJson(currentJson => {\n          const currentValue = currentJson != null ? JSON.parse(currentJson) : undefined;\n          const newValue = v(currentValue);\n          // Store the Object as a serialized Value or clear the value\n          return newValue != null ? JSON.stringify(newValue) : undefined;\n        });\n      } else {\n        // Store the Object as a serialized Value or clear the value\n        const newValue = v != null ? JSON.stringify(v) : undefined;\n        setJson(newValue);\n      }\n    }, [setJson]);\n    return [value, setValue];\n  }\n\n  /**\n   * Listen for changes in the given MMKV storage instance.\n   * If no instance is passed, the default instance will be used.\n   * @param valueChangedListener The function to call whenever a value inside the storage instance changes\n   * @param instance The instance to listen to changes to (or the default instance)\n   *\n   * @example\n   * ```ts\n   * useMMKVListener((key) => {\n   *   console.log(`Value for \"${key}\" changed!`)\n   * })\n   * ```\n   */\n  function useMMKVListener(valueChangedListener, instance) {\n    const ref = (0, _react.useRef)(valueChangedListener);\n    ref.current = valueChangedListener;\n    const mmkv = instance ?? getDefaultInstance();\n    (0, _react.useEffect)(() => {\n      const listener = mmkv.addOnValueChangedListener(changedKey => {\n        ref.current(changedKey);\n      });\n      return () => listener.remove();\n    }, [mmkv]);\n  }\n});","lineCount":199,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useMMKV"],[7,17,1,13],[7,20,1,13,"useMMKV"],[7,27,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useMMKVBuffer"],[8,23,1,13],[8,26,1,13,"exports"],[8,33,1,13],[8,34,1,13,"useMMKVBoolean"],[8,48,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"useMMKVListener"],[9,25,1,13],[9,28,1,13,"useMMKVListener"],[9,43,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"useMMKVNumber"],[10,23,1,13],[11,2,1,13,"exports"],[11,9,1,13],[11,10,1,13,"useMMKVObject"],[11,23,1,13],[11,26,1,13,"useMMKVObject"],[11,39,1,13],[12,2,1,13,"exports"],[12,9,1,13],[12,10,1,13,"useMMKVString"],[12,23,1,13],[13,2,3,0],[13,6,3,0,"_react"],[13,12,3,0],[13,15,3,0,"require"],[13,22,3,0],[13,23,3,0,"_dependencyMap"],[13,37,3,0],[14,2,4,0],[14,6,4,0,"_MMKV"],[14,11,4,0],[14,14,4,0,"require"],[14,21,4,0],[14,22,4,0,"_dependencyMap"],[14,36,4,0],[15,2,5,0],[15,11,5,9,"isConfigurationEqual"],[15,31,5,29,"isConfigurationEqual"],[15,32,5,30,"left"],[15,36,5,34],[15,38,5,36,"right"],[15,43,5,41],[15,45,5,43],[16,4,6,2],[16,8,6,6,"left"],[16,12,6,10],[16,16,6,14],[16,20,6,18],[16,24,6,22,"right"],[16,29,6,27],[16,33,6,31],[16,37,6,35],[16,39,6,37],[16,46,6,44,"left"],[16,50,6,48],[16,54,6,52],[16,58,6,56],[16,62,6,60,"right"],[16,67,6,65],[16,71,6,69],[16,75,6,73],[17,4,7,2],[17,11,7,9,"left"],[17,15,7,13],[17,16,7,14,"encryptionKey"],[17,29,7,27],[17,34,7,32,"right"],[17,39,7,37],[17,40,7,38,"encryptionKey"],[17,53,7,51],[17,57,7,55,"left"],[17,61,7,59],[17,62,7,60,"id"],[17,64,7,62],[17,69,7,67,"right"],[17,74,7,72],[17,75,7,73,"id"],[17,77,7,75],[17,81,7,79,"left"],[17,85,7,83],[17,86,7,84,"path"],[17,90,7,88],[17,95,7,93,"right"],[17,100,7,98],[17,101,7,99,"path"],[17,105,7,103],[17,109,7,107,"left"],[17,113,7,111],[17,114,7,112,"mode"],[17,118,7,116],[17,123,7,121,"right"],[17,128,7,126],[17,129,7,127,"mode"],[17,133,7,131],[18,2,8,0],[19,2,9,0],[19,6,9,4,"defaultInstance"],[19,21,9,19],[19,24,9,22],[19,28,9,26],[20,2,10,0],[20,11,10,9,"getDefaultInstance"],[20,29,10,27,"getDefaultInstance"],[20,30,10,27],[20,32,10,30],[21,4,11,2],[21,8,11,6,"defaultInstance"],[21,23,11,21],[21,27,11,25],[21,31,11,29],[21,33,11,31],[22,6,12,4,"defaultInstance"],[22,21,12,19],[22,24,12,22],[22,28,12,26,"MMKV"],[22,38,12,30],[22,39,12,31],[22,40,12,32],[23,4,13,2],[24,4,14,2],[24,11,14,9,"defaultInstance"],[24,26,14,24],[25,2,15,0],[27,2,17,0],[28,0,18,0],[29,0,19,0],[31,2,21,0],[32,0,22,0],[33,0,23,0],[34,0,24,0],[36,2,26,7],[36,11,26,16,"useMMKV"],[36,18,26,23,"useMMKV"],[36,19,26,24,"configuration"],[36,32,26,37],[36,34,26,39],[37,4,27,2],[37,10,27,8,"instance"],[37,18,27,16],[37,21,27,19],[37,25,27,19,"useRef"],[37,38,27,25],[37,40,27,26],[37,41,27,27],[38,4,28,2],[38,10,28,8,"lastConfiguration"],[38,27,28,25],[38,30,28,28],[38,34,28,28,"useRef"],[38,47,28,34],[38,49,28,35],[38,50,28,36],[39,4,29,2],[39,8,29,6,"configuration"],[39,21,29,19],[39,25,29,23],[39,29,29,27],[39,31,29,29],[39,38,29,36,"getDefaultInstance"],[39,56,29,54],[39,57,29,55],[39,58,29,56],[40,4,30,2],[40,8,30,6,"instance"],[40,16,30,14],[40,17,30,15,"current"],[40,24,30,22],[40,28,30,26],[40,32,30,30],[40,36,30,34],[40,37,30,35,"isConfigurationEqual"],[40,57,30,55],[40,58,30,56,"lastConfiguration"],[40,75,30,73],[40,76,30,74,"current"],[40,83,30,81],[40,85,30,83,"configuration"],[40,98,30,96],[40,99,30,97],[40,101,30,99],[41,6,31,4,"lastConfiguration"],[41,23,31,21],[41,24,31,22,"current"],[41,31,31,29],[41,34,31,32,"configuration"],[41,47,31,45],[42,6,32,4,"instance"],[42,14,32,12],[42,15,32,13,"current"],[42,22,32,20],[42,25,32,23],[42,29,32,27,"MMKV"],[42,39,32,31],[42,40,32,32,"configuration"],[42,53,32,45],[42,54,32,46],[43,4,33,2],[44,4,34,2],[44,11,34,9,"instance"],[44,19,34,17],[44,20,34,18,"current"],[44,27,34,25],[45,2,35,0],[46,2,36,0],[46,11,36,9,"createMMKVHook"],[46,25,36,23,"createMMKVHook"],[46,26,36,24,"getter"],[46,32,36,30],[46,34,36,32],[47,4,37,2],[47,11,37,9],[47,12,37,10,"key"],[47,15,37,13],[47,17,37,15,"instance"],[47,25,37,23],[47,30,37,28],[48,6,38,4],[48,12,38,10,"mmkv"],[48,16,38,14],[48,19,38,17,"instance"],[48,27,38,25],[48,31,38,29,"getDefaultInstance"],[48,49,38,47],[48,50,38,48],[48,51,38,49],[49,6,39,4],[49,12,39,10],[49,13,39,11,"bump"],[49,17,39,15],[49,19,39,17,"setBump"],[49,26,39,24],[49,27,39,25],[49,30,39,28],[49,34,39,28,"useState"],[49,49,39,36],[49,51,39,37],[49,52,39,38],[49,53,39,39],[50,6,40,4],[50,12,40,10,"value"],[50,17,40,15],[50,20,40,18],[50,24,40,18,"useMemo"],[50,38,40,25],[50,40,40,26],[50,46,40,32],[51,8,41,6],[52,8,42,6],[53,8,43,6],[54,8,44,6,"bump"],[54,12,44,10],[55,8,45,6],[55,15,45,13,"getter"],[55,21,45,19],[55,22,45,20,"mmkv"],[55,26,45,24],[55,28,45,26,"key"],[55,31,45,29],[55,32,45,30],[56,6,46,4],[56,7,46,5],[56,9,46,7],[56,10,46,8,"mmkv"],[56,14,46,12],[56,16,46,14,"key"],[56,19,46,17],[56,21,46,19,"bump"],[56,25,46,23],[56,26,46,24],[56,27,46,25],[58,6,48,4],[59,6,49,4],[59,12,49,10,"set"],[59,15,49,13],[59,18,49,16],[59,22,49,16,"useCallback"],[59,40,49,27],[59,42,49,28,"v"],[59,43,49,29],[59,47,49,33],[60,8,50,6],[60,14,50,12,"newValue"],[60,22,50,20],[60,25,50,23],[60,32,50,30,"v"],[60,33,50,31],[60,38,50,36],[60,48,50,46],[60,51,50,49,"v"],[60,52,50,50],[60,53,50,51,"getter"],[60,59,50,57],[60,60,50,58,"mmkv"],[60,64,50,62],[60,66,50,64,"key"],[60,69,50,67],[60,70,50,68],[60,71,50,69],[60,74,50,72,"v"],[60,75,50,73],[61,8,51,6],[61,16,51,14],[61,23,51,21,"newValue"],[61,31,51,29],[62,10,52,8],[62,15,52,13],[62,23,52,21],[63,10,53,8],[63,15,53,13],[63,23,53,21],[64,10,54,8],[64,15,54,13],[64,24,54,22],[65,12,55,10,"mmkv"],[65,16,55,14],[65,17,55,15,"set"],[65,20,55,18],[65,21,55,19,"key"],[65,24,55,22],[65,26,55,24,"newValue"],[65,34,55,32],[65,35,55,33],[66,12,56,10],[67,10,57,8],[67,15,57,13],[67,26,57,24],[68,12,58,10,"mmkv"],[68,16,58,14],[68,17,58,15,"delete"],[68,23,58,21],[68,24,58,22,"key"],[68,27,58,25],[68,28,58,26],[69,12,59,10],[70,10,60,8],[70,15,60,13],[70,23,60,21],[71,12,61,10],[71,16,61,14,"newValue"],[71,24,61,22],[71,36,61,34,"ArrayBuffer"],[71,47,61,45],[71,49,61,47],[72,14,62,12,"mmkv"],[72,18,62,16],[72,19,62,17,"set"],[72,22,62,20],[72,23,62,21,"key"],[72,26,62,24],[72,28,62,26,"newValue"],[72,36,62,34],[72,37,62,35],[73,14,63,12],[74,12,64,10],[74,13,64,11],[74,19,64,17],[75,14,65,12],[75,20,65,18],[75,24,65,22,"Error"],[75,29,65,27],[75,30,65,28],[75,52,65,50,"newValue"],[75,60,65,58],[75,81,65,79],[75,82,65,80],[76,12,66,10],[77,10,67,8],[78,12,68,10],[78,18,68,16],[78,22,68,20,"Error"],[78,27,68,25],[78,28,68,26],[78,42,68,40],[78,49,68,47,"newValue"],[78,57,68,55],[78,77,68,75],[78,78,68,76],[79,8,69,6],[80,6,70,4],[80,7,70,5],[80,9,70,7],[80,10,70,8,"key"],[80,13,70,11],[80,15,70,13,"mmkv"],[80,19,70,17],[80,20,70,18],[80,21,70,19],[82,6,72,4],[83,6,73,4],[83,10,73,4,"useEffect"],[83,26,73,13],[83,28,73,14],[83,34,73,20],[84,8,74,6],[84,14,74,12,"listener"],[84,22,74,20],[84,25,74,23,"mmkv"],[84,29,74,27],[84,30,74,28,"addOnValueChangedListener"],[84,55,74,53],[84,56,74,54,"changedKey"],[84,66,74,64],[84,70,74,68],[85,10,75,8],[85,14,75,12,"changedKey"],[85,24,75,22],[85,29,75,27,"key"],[85,32,75,30],[85,34,75,32],[86,12,76,10,"setBump"],[86,19,76,17],[86,20,76,18,"b"],[86,21,76,19],[86,25,76,23,"b"],[86,26,76,24],[86,29,76,27],[86,30,76,28],[86,31,76,29],[87,10,77,8],[88,8,78,6],[88,9,78,7],[88,10,78,8],[89,8,79,6],[89,15,79,13],[89,21,79,19,"listener"],[89,29,79,27],[89,30,79,28,"remove"],[89,36,79,34],[89,37,79,35],[89,38,79,36],[90,6,80,4],[90,7,80,5],[90,9,80,7],[90,10,80,8,"key"],[90,13,80,11],[90,15,80,13,"mmkv"],[90,19,80,17],[90,20,80,18],[90,21,80,19],[91,6,81,4],[91,13,81,11],[91,14,81,12,"value"],[91,19,81,17],[91,21,81,19,"set"],[91,24,81,22],[91,25,81,23],[92,4,82,2],[92,5,82,3],[93,2,83,0],[95,2,85,0],[96,0,86,0],[97,0,87,0],[98,0,88,0],[99,0,89,0],[100,0,90,0],[101,0,91,0],[102,0,92,0],[103,0,93,0],[104,0,94,0],[105,2,95,7],[105,8,95,13,"useMMKVString"],[105,21,95,26],[105,24,95,26,"exports"],[105,31,95,26],[105,32,95,26,"useMMKVString"],[105,45,95,26],[105,48,95,29,"createMMKVHook"],[105,62,95,43],[105,63,95,44],[105,64,95,45,"instance"],[105,72,95,53],[105,74,95,55,"key"],[105,77,95,58],[105,82,95,63,"instance"],[105,90,95,71],[105,91,95,72,"getString"],[105,100,95,81],[105,101,95,82,"key"],[105,104,95,85],[105,105,95,86],[105,106,95,87],[107,2,97,0],[108,0,98,0],[109,0,99,0],[110,0,100,0],[111,0,101,0],[112,0,102,0],[113,0,103,0],[114,0,104,0],[115,0,105,0],[116,0,106,0],[117,2,107,7],[117,8,107,13,"useMMKVNumber"],[117,21,107,26],[117,24,107,26,"exports"],[117,31,107,26],[117,32,107,26,"useMMKVNumber"],[117,45,107,26],[117,48,107,29,"createMMKVHook"],[117,62,107,43],[117,63,107,44],[117,64,107,45,"instance"],[117,72,107,53],[117,74,107,55,"key"],[117,77,107,58],[117,82,107,63,"instance"],[117,90,107,71],[117,91,107,72,"getNumber"],[117,100,107,81],[117,101,107,82,"key"],[117,104,107,85],[117,105,107,86],[117,106,107,87],[118,2,108,0],[119,0,109,0],[120,0,110,0],[121,0,111,0],[122,0,112,0],[123,0,113,0],[124,0,114,0],[125,0,115,0],[126,0,116,0],[127,0,117,0],[128,2,118,7],[128,8,118,13,"useMMKVBoolean"],[128,22,118,27],[128,25,118,27,"exports"],[128,32,118,27],[128,33,118,27,"useMMKVBoolean"],[128,47,118,27],[128,50,118,30,"createMMKVHook"],[128,64,118,44],[128,65,118,45],[128,66,118,46,"instance"],[128,74,118,54],[128,76,118,56,"key"],[128,79,118,59],[128,84,118,64,"instance"],[128,92,118,72],[128,93,118,73,"getBoolean"],[128,103,118,83],[128,104,118,84,"key"],[128,107,118,87],[128,108,118,88],[128,109,118,89],[129,2,119,0],[130,0,120,0],[131,0,121,0],[132,0,122,0],[133,0,123,0],[134,0,124,0],[135,0,125,0],[136,0,126,0],[137,0,127,0],[138,0,128,0],[139,2,129,7],[139,8,129,13,"useMMKVBuffer"],[139,21,129,26],[139,24,129,26,"exports"],[139,31,129,26],[139,32,129,26,"useMMKVBuffer"],[139,45,129,26],[139,48,129,29,"createMMKVHook"],[139,62,129,43],[139,63,129,44],[139,64,129,45,"instance"],[139,72,129,53],[139,74,129,55,"key"],[139,77,129,58],[139,82,129,63,"instance"],[139,90,129,71],[139,91,129,72,"getBuffer"],[139,100,129,81],[139,101,129,82,"key"],[139,104,129,85],[139,105,129,86],[139,106,129,87],[140,2,130,0],[141,0,131,0],[142,0,132,0],[143,0,133,0],[144,0,134,0],[145,0,135,0],[146,0,136,0],[147,0,137,0],[148,0,138,0],[149,0,139,0],[150,0,140,0],[151,0,141,0],[152,2,142,7],[152,11,142,16,"useMMKVObject"],[152,24,142,29,"useMMKVObject"],[152,25,142,30,"key"],[152,28,142,33],[152,30,142,35,"instance"],[152,38,142,43],[152,40,142,45],[153,4,143,2],[153,10,143,8],[153,11,143,9,"json"],[153,15,143,13],[153,17,143,15,"setJson"],[153,24,143,22],[153,25,143,23],[153,28,143,26,"useMMKVString"],[153,41,143,39],[153,42,143,40,"key"],[153,45,143,43],[153,47,143,45,"instance"],[153,55,143,53],[153,56,143,54],[154,4,144,2],[154,10,144,8,"value"],[154,15,144,13],[154,18,144,16],[154,22,144,16,"useMemo"],[154,36,144,23],[154,38,144,24],[154,44,144,30],[155,6,145,4],[155,10,145,8,"json"],[155,14,145,12],[155,18,145,16],[155,22,145,20],[155,24,145,22],[155,31,145,29,"undefined"],[155,40,145,38],[156,6,146,4],[156,13,146,11,"JSON"],[156,17,146,15],[156,18,146,16,"parse"],[156,23,146,21],[156,24,146,22,"json"],[156,28,146,26],[156,29,146,27],[157,4,147,2],[157,5,147,3],[157,7,147,5],[157,8,147,6,"json"],[157,12,147,10],[157,13,147,11],[157,14,147,12],[158,4,148,2],[158,10,148,8,"setValue"],[158,18,148,16],[158,21,148,19],[158,25,148,19,"useCallback"],[158,43,148,30],[158,45,148,31,"v"],[158,46,148,32],[158,50,148,36],[159,6,149,4],[159,10,149,8,"v"],[159,11,149,9],[159,23,149,21,"Function"],[159,31,149,29],[159,33,149,31],[160,8,150,6,"setJson"],[160,15,150,13],[160,16,150,14,"currentJson"],[160,27,150,25],[160,31,150,29],[161,10,151,8],[161,16,151,14,"currentValue"],[161,28,151,26],[161,31,151,29,"currentJson"],[161,42,151,40],[161,46,151,44],[161,50,151,48],[161,53,151,51,"JSON"],[161,57,151,55],[161,58,151,56,"parse"],[161,63,151,61],[161,64,151,62,"currentJson"],[161,75,151,73],[161,76,151,74],[161,79,151,77,"undefined"],[161,88,151,86],[162,10,152,8],[162,16,152,14,"newValue"],[162,24,152,22],[162,27,152,25,"v"],[162,28,152,26],[162,29,152,27,"currentValue"],[162,41,152,39],[162,42,152,40],[163,10,153,8],[164,10,154,8],[164,17,154,15,"newValue"],[164,25,154,23],[164,29,154,27],[164,33,154,31],[164,36,154,34,"JSON"],[164,40,154,38],[164,41,154,39,"stringify"],[164,50,154,48],[164,51,154,49,"newValue"],[164,59,154,57],[164,60,154,58],[164,63,154,61,"undefined"],[164,72,154,70],[165,8,155,6],[165,9,155,7],[165,10,155,8],[166,6,156,4],[166,7,156,5],[166,13,156,11],[167,8,157,6],[168,8,158,6],[168,14,158,12,"newValue"],[168,22,158,20],[168,25,158,23,"v"],[168,26,158,24],[168,30,158,28],[168,34,158,32],[168,37,158,35,"JSON"],[168,41,158,39],[168,42,158,40,"stringify"],[168,51,158,49],[168,52,158,50,"v"],[168,53,158,51],[168,54,158,52],[168,57,158,55,"undefined"],[168,66,158,64],[169,8,159,6,"setJson"],[169,15,159,13],[169,16,159,14,"newValue"],[169,24,159,22],[169,25,159,23],[170,6,160,4],[171,4,161,2],[171,5,161,3],[171,7,161,5],[171,8,161,6,"setJson"],[171,15,161,13],[171,16,161,14],[171,17,161,15],[172,4,162,2],[172,11,162,9],[172,12,162,10,"value"],[172,17,162,15],[172,19,162,17,"setValue"],[172,27,162,25],[172,28,162,26],[173,2,163,0],[175,2,165,0],[176,0,166,0],[177,0,167,0],[178,0,168,0],[179,0,169,0],[180,0,170,0],[181,0,171,0],[182,0,172,0],[183,0,173,0],[184,0,174,0],[185,0,175,0],[186,0,176,0],[187,0,177,0],[188,2,178,7],[188,11,178,16,"useMMKVListener"],[188,26,178,31,"useMMKVListener"],[188,27,178,32,"valueChangedListener"],[188,47,178,52],[188,49,178,54,"instance"],[188,57,178,62],[188,59,178,64],[189,4,179,2],[189,10,179,8,"ref"],[189,13,179,11],[189,16,179,14],[189,20,179,14,"useRef"],[189,33,179,20],[189,35,179,21,"valueChangedListener"],[189,55,179,41],[189,56,179,42],[190,4,180,2,"ref"],[190,7,180,5],[190,8,180,6,"current"],[190,15,180,13],[190,18,180,16,"valueChangedListener"],[190,38,180,36],[191,4,181,2],[191,10,181,8,"mmkv"],[191,14,181,12],[191,17,181,15,"instance"],[191,25,181,23],[191,29,181,27,"getDefaultInstance"],[191,47,181,45],[191,48,181,46],[191,49,181,47],[192,4,182,2],[192,8,182,2,"useEffect"],[192,24,182,11],[192,26,182,12],[192,32,182,18],[193,6,183,4],[193,12,183,10,"listener"],[193,20,183,18],[193,23,183,21,"mmkv"],[193,27,183,25],[193,28,183,26,"addOnValueChangedListener"],[193,53,183,51],[193,54,183,52,"changedKey"],[193,64,183,62],[193,68,183,66],[194,8,184,6,"ref"],[194,11,184,9],[194,12,184,10,"current"],[194,19,184,17],[194,20,184,18,"changedKey"],[194,30,184,28],[194,31,184,29],[195,6,185,4],[195,7,185,5],[195,8,185,6],[196,6,186,4],[196,13,186,11],[196,19,186,17,"listener"],[196,27,186,25],[196,28,186,26,"remove"],[196,34,186,32],[196,35,186,33],[196,36,186,34],[197,4,187,2],[197,5,187,3],[197,7,187,5],[197,8,187,6,"mmkv"],[197,12,187,10],[197,13,187,11],[197,14,187,12],[198,2,188,0],[199,0,188,1],[199,3]],"functionMap":{"names":["<global>","isConfigurationEqual","getDefaultInstance","useMMKV","createMMKVHook","<anonymous>","useMemo$argument_0","set","useEffect$argument_0","mmkv.addOnValueChangedListener$argument_0","setBump$argument_0","createMMKVHook$argument_0","useMMKVObject","setValue","setJson$argument_0","useMMKVListener"],"mappings":"AAA;ACI;CDG;AEE;CFK;OGW;CHS;AIC;SCC;0BCG;KDM;4BEG;KFqB;cGG;sDCC;kBCE,UD;ODE;aHC,uBG;KHC;GDE;CJC;4CWY,0CX;4CWY,0CX;6CWW,2CX;4CWW,0CX;OYa;wBNE;GMG;+BCC;cCE;ODK;GDM;CZE;Oee;YPI;oDCC;KDE;WHC,uBG;GOC;CfC"}},"type":"js/module"}]}